{"version":3,"file":"index.module.js","sources":["../src/compare-identifiers.js","../src/compare.js"],"sourcesContent":["/*\ncompareIdentifiers was taken from semver package, which is licensed under ISC\n\nGitHub: https://github.com/npm/node-semver/\nNPM: https://www.npmjs.com/package/semver\nLicense: https://github.com/npm/node-semver/blob/main/LICENSE\n\nThe ISC License\n\nCopyright (c) Isaac Z. Schlueter and Contributors\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR\nIN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n*/\n\nconst numeric = /^[0-9]+$/\nexport const compareIdentifiers = (a, b) => {\n  const anum = numeric.test(a)\n  const bnum = numeric.test(b)\n\n  if (anum && bnum) {\n    a = +a\n    b = +b\n  }\n\n  return a === b ? 0 : anum && !bnum ? -1 : bnum && !anum ? 1 : a < b ? -1 : 1\n}\n","import {compareIdentifiers} from \"./compare-identifiers\"\n\n// Official Semver Regex https://semver.org/#is-there-a-suggested-regular-expression-regex-to-check-a-semver-string\nconst VERSION_REGEX =\n  /^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$/\n\n/**\n * Compares two semver versions\n * @param {string} a - The first version to compare\n * @param {string} b - The second version to compare\n * @returns {number} - Returns 1 if a is greater than b, -1 if a is less than b, and 0 if they are equal\n */\nexport const compare = (a, b) => {\n  if (typeof a !== \"string\" || typeof b !== \"string\")\n    throw new Error(\"Invalid input\")\n\n  const vsnA = a.match(VERSION_REGEX)\n  const vsnB = b.match(VERSION_REGEX)\n\n  if (!vsnA || !vsnB) throw new Error(\"Invalid input\")\n\n  for (let i = 1; i <= 3; i++) {\n    // If either is greater than the other, return\n    if (parseInt(vsnA[i]) > parseInt(vsnB[i])) return 1\n    if (parseInt(vsnA[i]) < parseInt(vsnB[i])) return -1\n  }\n\n  // If equal, compare prerelease\n  if (vsnA[4] && vsnB[4]) {\n    const prereleaseA = (vsnA[4] || \"\").split(\".\")\n    const prereleaseB = (vsnB[4] || \"\").split(\".\")\n\n    for (let i = 0; i < Math.max(prereleaseA.length, prereleaseB.length); i++) {\n      // If one identifier has more fields than the other & the rest is equal, the one with more fields is greater\n      if (prereleaseA[i] === undefined) return -1\n      if (prereleaseB[i] === undefined) return 1\n\n      // Compare field identifiers\n      const cmp = compareIdentifiers(prereleaseA[i], prereleaseB[i])\n      if (cmp !== 0) return cmp\n    }\n  }\n\n  return 0\n}\n"],"names":["numeric","compareIdentifiers","a","b","anum","test","bnum","VERSION_REGEX","compare","Error","vsnA","match","vsnB","i","parseInt","prereleaseA","split","prereleaseB","Math","max","length","undefined","cmp"],"mappings":"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"}