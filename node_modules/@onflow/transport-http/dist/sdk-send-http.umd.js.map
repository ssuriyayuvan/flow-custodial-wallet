{"version":3,"file":"sdk-send-http.umd.js","sources":["../src/utils.js","../src/combine-urls.ts","../src/http-request.js","../src/send-execute-script.js","../src/send-get-account.js","../src/send-get-block-header.js","../src/send-get-block.js","../src/send-get-collection.js","../src/send-get-events.js","../src/send-get-transaction.js","../src/send-get-transaction-status.js","../src/send-ping.ts","../src/send-transaction.js","../src/send-get-network-parameters.js","../src/send-get-node-version-info.ts","../src/websocket.ts","../src/connect-ws.ts","../src/connect-subscribe-events.ts","../src/send-http.ts"],"sourcesContent":["export function safeParseJSON(data) {\n  try {\n    return JSON.parse(data)\n  } catch {\n    return null\n  }\n}\n","/**\n * This file was taken from the Axios project and modified to work with TypeScript/ES6 modules.\n *\n * The original file can be found on GitHub:\n * https://github.com/axios/axios/blob/fe7d09bb08fa1c0e414956b7fc760c80459b0a43/lib/helpers/combineURLs.js\n *\n * The original license is included below:\n *\n * Copyright (c) 2014 Matt Zabriskie\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param baseURL The base URL\n * @param relativeURL The relative URL\n * @returns The combined URL\n */\nexport function combineURLs(baseURL: string, relativeURL?: string): string {\n  return relativeURL\n    ? baseURL.replace(/\\/+$/, \"\") + \"/\" + relativeURL.replace(/^\\/+/, \"\")\n    : baseURL\n}\n","import * as logger from \"@onflow/util-logger\"\nimport fetchTransport from \"cross-fetch\"\nimport {safeParseJSON} from \"./utils\"\nimport {combineURLs} from \"./combine-urls\"\n\nconst AbortController =\n  globalThis.AbortController || require(\"abort-controller\")\n\nexport class HTTPRequestError extends Error {\n  constructor({\n    error,\n    hostname,\n    path,\n    method,\n    requestBody,\n    responseBody,\n    responseStatusText,\n    statusCode,\n  }) {\n    const msg = `\n      HTTP Request Error: An error occurred when interacting with the Access API.\n      ${error ? `error=${error}` : \"\"}\n      ${hostname ? `hostname=${hostname}` : \"\"}\n      ${path ? `path=${path}` : \"\"}\n      ${method ? `method=${method}` : \"\"}\n      ${requestBody ? `requestBody=${requestBody}` : \"\"}\n      ${responseBody ? `responseBody=${responseBody}` : \"\"}\n      ${responseStatusText ? `responseStatusText=${responseStatusText}` : \"\"}\n      ${statusCode ? `statusCode=${statusCode}` : \"\"}\n    `\n    super(msg)\n\n    this.name = \"HTTP Request Error\"\n    this.statusCode = statusCode\n    this.errorMessage = error\n  }\n}\n\n/**\n * Creates an HTTP Request to be sent to a REST Access API via Fetch API.\n *\n * @param {object} options - Options for the HTTP Request\n * @param {String} options.hostname - Access API Hostname\n * @param {String} options.path - Path to the resource on the Access API\n * @param {String} options.method - HTTP Method\n * @param {object} options.body - HTTP Request Body\n * @param {object} [options.headers] - HTTP Request Headers\n * @param {boolean} [options.enableRequestLogging=true] - Enable/Disable request logging\n * @param {number} [options.retryLimit=5] - Number of times to retry request\n * @param {number} [options.retryIntervalMs=1000] - Time in milliseconds to wait before retrying request\n * @param {number} [options.timeoutLimit=30000] - Time in milliseconds to wait before timing out request\n *\n * @returns JSON object response from Access API.\n */\nexport async function httpRequest({\n  hostname,\n  path,\n  method,\n  body,\n  headers,\n  retryLimit = 5,\n  retryIntervalMs = 1000,\n  timeoutLimit = 30000,\n  enableRequestLogging = true,\n}) {\n  const bodyJSON = body ? JSON.stringify(body) : null\n\n  function makeRequest() {\n    const controller = new AbortController()\n    const fetchTimeout = setTimeout(() => {\n      controller.abort()\n    }, timeoutLimit)\n\n    return fetchTransport(combineURLs(hostname, path).toString(), {\n      method: method,\n      body: bodyJSON,\n      headers,\n      signal: controller.signal,\n    })\n      .then(async res => {\n        if (res.ok) {\n          return res.json()\n        }\n\n        const responseText = await res.text().catch(() => null)\n        const response = safeParseJSON(responseText)\n\n        throw new HTTPRequestError({\n          error: response?.message,\n          hostname,\n          path,\n          method,\n          requestBody: bodyJSON,\n          responseBody: responseText,\n          responseStatusText: res.statusText,\n          statusCode: res.status,\n        })\n      })\n      .catch(async e => {\n        if (e instanceof HTTPRequestError) {\n          throw e\n        }\n\n        if (e.name === \"AbortError\") {\n          throw e\n        }\n\n        // Show AN error for all network errors\n        if (enableRequestLogging) {\n          await logger.log({\n            title: \"Access Node Error\",\n            message: `The provided access node ${hostname} does not appear to be a valid REST/HTTP access node.\n  Please verify that you are not unintentionally using a GRPC access node.\n  See more here: https://docs.onflow.org/fcl/reference/sdk-guidelines/#connect`,\n            level: logger.LEVELS.error,\n          })\n        }\n\n        throw new HTTPRequestError({\n          error: e?.message,\n          hostname,\n          path,\n          method,\n          requestBody: bodyJSON,\n        })\n      })\n      .finally(() => {\n        clearTimeout(fetchTimeout)\n      })\n  }\n\n  async function requestLoop(retryAttempt = 0) {\n    try {\n      const resp = await makeRequest()\n      return resp\n    } catch (error) {\n      const retryStatusCodes = [408, 429, 500, 502, 503, 504]\n\n      if (\n        error.name === \"AbortError\" ||\n        retryStatusCodes.includes(error.statusCode)\n      ) {\n        return await new Promise((resolve, reject) => {\n          if (retryAttempt < retryLimit) {\n            if (enableRequestLogging) {\n              console.warn(\n                `Access node unavailable, retrying in ${retryIntervalMs} ms...`\n              )\n            }\n            setTimeout(() => {\n              resolve(requestLoop(retryAttempt + 1))\n            }, retryIntervalMs)\n          } else {\n            reject(error)\n          }\n        })\n      } else {\n        throw error\n      }\n    }\n  }\n\n  // Keep retrying request until server available or max attempts exceeded\n  return await requestLoop()\n}\n","import {invariant} from \"@onflow/util-invariant\"\nimport {Buffer} from \"@onflow/rlp\"\nimport {httpRequest as defaultHttpRequest} from \"./http-request.js\"\n\nasync function sendExecuteScriptAtBlockIDRequest(ix, context, opts) {\n  const httpRequest = opts.httpRequest || defaultHttpRequest\n\n  const res = await httpRequest({\n    hostname: opts.node,\n    path: `/v1/scripts?block_id=${ix.block.id}`,\n    method: \"POST\",\n    body: {\n      script: context.Buffer.from(ix.message.cadence).toString(\"base64\"),\n      arguments: ix.message.arguments.map(arg =>\n        context.Buffer.from(\n          JSON.stringify(ix.arguments[arg].asArgument)\n        ).toString(\"base64\")\n      ),\n    },\n  })\n\n  return constructResponse(ix, context, res)\n}\n\nasync function sendExecuteScriptAtBlockHeightRequest(ix, context, opts) {\n  const httpRequest = opts.httpRequest || defaultHttpRequest\n\n  const res = await httpRequest({\n    hostname: opts.node,\n    path: `/v1/scripts?block_height=${ix.block.height}`,\n    method: \"POST\",\n    body: {\n      script: context.Buffer.from(ix.message.cadence).toString(\"base64\"),\n      arguments: ix.message.arguments.map(arg =>\n        context.Buffer.from(\n          JSON.stringify(ix.arguments[arg].asArgument)\n        ).toString(\"base64\")\n      ),\n    },\n  })\n\n  return constructResponse(ix, context, res)\n}\n\nasync function sendExecuteScriptAtLatestBlockRequest(ix, context, opts) {\n  const httpRequest = opts.httpRequest || defaultHttpRequest\n\n  const res = await httpRequest({\n    hostname: opts.node,\n    path: `/v1/scripts?block_height=sealed`,\n    method: \"POST\",\n    body: {\n      script: context.Buffer.from(ix.message.cadence).toString(\"base64\"),\n      arguments: ix.message.arguments.map(arg =>\n        context.Buffer.from(\n          JSON.stringify(ix.arguments[arg].asArgument)\n        ).toString(\"base64\")\n      ),\n    },\n  })\n\n  return constructResponse(ix, context, res)\n}\n\nfunction constructResponse(ix, context, res) {\n  let ret = context.response()\n  ret.tag = ix.tag\n\n  ret.encodedData = JSON.parse(context.Buffer.from(res, \"base64\").toString())\n\n  return ret\n}\n\nexport async function sendExecuteScript(ix, context = {}, opts = {}) {\n  invariant(\n    opts.node,\n    `SDK Send Execute Script Error: opts.node must be defined.`\n  )\n  invariant(\n    context.response,\n    `SDK Send Execute Script Error: context.response must be defined.`\n  )\n  invariant(\n    context.Buffer,\n    `SDK Send Execute Script Error: context.Buffer must be defined.`\n  )\n\n  ix = await ix\n\n  if (ix.block.id) {\n    return await sendExecuteScriptAtBlockIDRequest(ix, context, opts)\n  } else if (ix.block.height) {\n    return await sendExecuteScriptAtBlockHeightRequest(ix, context, opts)\n  } else {\n    return await sendExecuteScriptAtLatestBlockRequest(ix, context, opts)\n  }\n}\n","import {invariant} from \"@onflow/util-invariant\"\nimport {httpRequest as defaultHttpRequest} from \"./http-request.js\"\n\nconst HashAlgorithmIDs = {\n  SHA2_256: 1,\n  SHA2_384: 2,\n  SHA3_256: 3,\n  SHA3_384: 4,\n  KMAC128_BLS_BLS12_381: 5,\n}\n\nconst SignatureAlgorithmIDs = {\n  ECDSA_P256: 1,\n  ECDSA_secp256k1: 2,\n  BLS_BLS12_381: 3,\n}\n\nasync function sendGetAccountAtBlockHeightRequest(ix, context, opts) {\n  const httpRequest = opts.httpRequest || defaultHttpRequest\n\n  const res = await httpRequest({\n    hostname: opts.node,\n    path: `/v1/accounts/${ix.account.addr}?block_height=${ix.block.height}&expand=contracts,keys`,\n    method: \"GET\",\n    body: null,\n  })\n\n  return constructResponse(ix, context, res)\n}\n\nasync function sendGetAccountAtLatestBlockRequest(ix, context, opts) {\n  const httpRequest = opts.httpRequest || defaultHttpRequest\n\n  const res = await httpRequest({\n    hostname: opts.node,\n    path: `/v1/accounts/${ix.account.addr}?block_height=sealed&expand=contracts,keys`,\n    method: \"GET\",\n    body: null,\n  })\n\n  return constructResponse(ix, context, res)\n}\n\nfunction constructResponse(ix, context, res) {\n  let ret = context.response()\n  ret.tag = ix.tag\n\n  const unwrapContracts = contracts => {\n    const c = {}\n    if (!contracts) return c\n    for (let key of Object.keys(contracts)) {\n      c[key] = context.Buffer.from(contracts[key], \"base64\").toString()\n    }\n    return c\n  }\n\n  ret.account = {\n    address: res.address,\n    balance: Number(res.balance),\n    code: \"\",\n    contracts: unwrapContracts(res.contracts),\n    keys:\n      res.keys?.map(key => ({\n        index: Number(key.index),\n        publicKey: key.public_key.replace(/^0x/, \"\"),\n        signAlgo: SignatureAlgorithmIDs[key.signing_algorithm],\n        signAlgoString: key.signing_algorithm,\n        hashAlgo: HashAlgorithmIDs[key.hashing_algorithm],\n        hashAlgoString: key.hashing_algorithm,\n        sequenceNumber: Number(key.sequence_number),\n        weight: Number(key.weight),\n        revoked: key.revoked,\n      })) ?? [],\n  }\n\n  return ret\n}\n\nexport async function sendGetAccount(ix, context = {}, opts = {}) {\n  invariant(opts.node, `SDK Send Get Account Error: opts.node must be defined.`)\n  invariant(\n    context.response,\n    `SDK Send Get Account Error: context.response must be defined.`\n  )\n  invariant(\n    context.Buffer,\n    `SDK Send Get Account Error: context.Buffer must be defined.`\n  )\n\n  ix = await ix\n\n  if (ix.block.height !== null) {\n    return await sendGetAccountAtBlockHeightRequest(ix, context, opts)\n  } else {\n    return await sendGetAccountAtLatestBlockRequest(ix, context, opts)\n  }\n}\n","import {invariant} from \"@onflow/util-invariant\"\nimport {httpRequest as defaultHttpRequest} from \"./http-request.js\"\n\nasync function sendGetBlockHeaderByIDRequest(ix, context, opts) {\n  const httpRequest = opts.httpRequest || defaultHttpRequest\n\n  const res = await httpRequest({\n    hostname: opts.node,\n    path: `/v1/blocks/${ix.block.id}`,\n    method: \"GET\",\n    body: null,\n  })\n\n  return constructResponse(ix, context, res)\n}\n\nasync function sendGetBlockHeaderByHeightRequest(ix, context, opts) {\n  const httpRequest = opts.httpRequest || defaultHttpRequest\n\n  const res = await httpRequest({\n    hostname: opts.node,\n    path: `/v1/blocks?height=${ix.block.height}`,\n    method: \"GET\",\n    body: null,\n  })\n\n  return constructResponse(ix, context, res)\n}\n\nasync function sendGetLatestBlockHeaderRequest(ix, context, opts) {\n  const httpRequest = opts.httpRequest || defaultHttpRequest\n\n  const height = ix.block?.isSealed ? \"sealed\" : \"final\"\n\n  const res = await httpRequest({\n    hostname: opts.node,\n    path: `/v1/blocks?height=${height}`,\n    method: \"GET\",\n    body: null,\n  })\n\n  return constructResponse(ix, context, res)\n}\n\nfunction constructResponse(ix, context, res) {\n  const block = res.length ? res[0] : null\n\n  const ret = context.response()\n  ret.tag = ix.tag\n  ret.blockHeader = {\n    id: block.header.id,\n    parentId: block.header.parent_id,\n    height: Number(block.header.height),\n    timestamp: block.header.timestamp,\n  }\n\n  return ret\n}\n\nexport async function sendGetBlockHeader(ix, context = {}, opts = {}) {\n  invariant(\n    opts.node,\n    `SDK Send Get Block Header Error: opts.node must be defined.`\n  )\n  invariant(\n    context.response,\n    `SDK Send Get Block Header Error: context.response must be defined.`\n  )\n\n  ix = await ix\n\n  const interactionHasBlockID = ix.block.id !== null\n  const interactionHasBlockHeight = ix.block.height !== null\n\n  if (interactionHasBlockID) {\n    return await sendGetBlockHeaderByIDRequest(ix, context, opts)\n  } else if (interactionHasBlockHeight) {\n    return await sendGetBlockHeaderByHeightRequest(ix, context, opts)\n  } else {\n    return await sendGetLatestBlockHeaderRequest(ix, context, opts)\n  }\n}\n","import {invariant} from \"@onflow/util-invariant\"\nimport {httpRequest as defaultHttpRequest} from \"./http-request.js\"\n\nasync function sendGetBlockByIDRequest(ix, context, opts) {\n  const httpRequest = opts.httpRequest || defaultHttpRequest\n\n  const res = await httpRequest({\n    hostname: opts.node,\n    path: `/v1/blocks/${ix.block.id}?expand=payload`,\n    method: \"GET\",\n    body: null,\n  })\n\n  return constructResponse(ix, context, res)\n}\n\nasync function sendGetBlockByHeightRequest(ix, context, opts) {\n  const httpRequest = opts.httpRequest || defaultHttpRequest\n\n  const res = await httpRequest({\n    hostname: opts.node,\n    path: `/v1/blocks?height=${ix.block.height}&expand=payload`,\n    method: \"GET\",\n    body: null,\n  })\n\n  return constructResponse(ix, context, res)\n}\n\nasync function sendGetBlockRequest(ix, context, opts) {\n  const httpRequest = opts.httpRequest || defaultHttpRequest\n\n  const height = ix.block?.isSealed ? \"sealed\" : \"final\"\n\n  const res = await httpRequest({\n    hostname: opts.node,\n    path: `/v1/blocks?height=${height}&expand=payload`,\n    method: \"GET\",\n    body: null,\n  })\n\n  return constructResponse(ix, context, res)\n}\n\nfunction constructResponse(ix, context, res) {\n  const block = res.length ? res[0] : null\n\n  const ret = context.response()\n  ret.tag = ix.tag\n  ret.block = {\n    id: block.header.id,\n    parentId: block.header.parent_id,\n    height: Number(block.header.height),\n    timestamp: block.header.timestamp,\n    collectionGuarantees: block.payload.collection_guarantees.map(\n      collectionGuarantee => ({\n        collectionId: collectionGuarantee.collection_id,\n        signerIds: collectionGuarantee.signer_ids,\n      })\n    ),\n    blockSeals: block.payload.block_seals.map(blockSeal => ({\n      blockId: blockSeal.block_id,\n      executionReceiptId: blockSeal.result_id,\n    })),\n  }\n\n  return ret\n}\n\nexport async function sendGetBlock(ix, context = {}, opts = {}) {\n  invariant(opts.node, `SDK Send Get Block Error: opts.node must be defined.`)\n  invariant(\n    context.response,\n    `SDK Send Get Block Error: context.response must be defined.`\n  )\n\n  ix = await ix\n\n  const interactionHasBlockID = ix.block.id !== null\n  const interactionHasBlockHeight = ix.block.height !== null\n\n  if (interactionHasBlockID) {\n    return await sendGetBlockByIDRequest(ix, context, opts)\n  } else if (interactionHasBlockHeight) {\n    return await sendGetBlockByHeightRequest(ix, context, opts)\n  } else {\n    return await sendGetBlockRequest(ix, context, opts)\n  }\n}\n","import {invariant} from \"@onflow/util-invariant\"\nimport {httpRequest as defaultHttpRequest} from \"./http-request.js\"\n\nexport async function sendGetCollection(ix, context = {}, opts = {}) {\n  invariant(\n    opts.node,\n    `SDK Send Get Collection Error: opts.node must be defined.`\n  )\n  invariant(\n    context.response,\n    `SDK Send Get Collection Error: context.response must be defined.`\n  )\n\n  const httpRequest = opts.httpRequest || defaultHttpRequest\n\n  const res = await httpRequest({\n    hostname: opts.node,\n    path: `/v1/collections/${ix.collection.id}?expand=transactions`,\n    method: \"GET\",\n    body: null,\n  })\n\n  const ret = context.response()\n  ret.tag = ix.tag\n  ret.collection = {\n    id: res.id,\n    transactionIds: res.transactions.map(transaction => transaction.id),\n  }\n\n  return ret\n}\n","import {invariant} from \"@onflow/util-invariant\"\nimport {httpRequest as defaultHttpRequest} from \"./http-request.js\"\n\nasync function sendGetEventsForHeightRangeRequest(ix, context, opts) {\n  const httpRequest = opts.httpRequest || defaultHttpRequest\n\n  const res = await httpRequest({\n    hostname: opts.node,\n    path: `/v1/events?type=${ix.events.eventType}&start_height=${ix.events.start}&end_height=${ix.events.end}`,\n    method: \"GET\",\n    body: null,\n  })\n\n  return constructResponse(ix, context, res)\n}\n\nasync function sendGetEventsForBlockIDsRequest(ix, context, opts) {\n  const httpRequest = opts.httpRequest || defaultHttpRequest\n\n  const res = await httpRequest({\n    hostname: opts.node,\n    path: `/v1/events?type=${\n      ix.events.eventType\n    }&block_ids=${ix.events.blockIds.join(\",\")}`,\n    method: \"GET\",\n    body: null,\n  })\n\n  return constructResponse(ix, context, res)\n}\n\nfunction constructResponse(ix, context, res) {\n  let ret = context.response()\n  ret.tag = ix.tag\n\n  ret.events = []\n  res.forEach(block =>\n    block.events\n      ? block.events.forEach(event =>\n          ret.events.push({\n            blockId: block.block_id,\n            blockHeight: Number(block.block_height),\n            blockTimestamp: block.block_timestamp,\n            type: event.type,\n            transactionId: event.transaction_id,\n            transactionIndex: Number(event.transaction_index),\n            eventIndex: Number(event.event_index),\n            payload: JSON.parse(\n              context.Buffer.from(event.payload, \"base64\").toString()\n            ),\n          })\n        )\n      : null\n  )\n\n  return ret\n}\n\nexport async function sendGetEvents(ix, context = {}, opts = {}) {\n  invariant(opts.node, `SDK Send Get Events Error: opts.node must be defined.`)\n  invariant(\n    context.response,\n    `SDK Send Get Events Error: context.response must be defined.`\n  )\n  invariant(\n    context.Buffer,\n    `SDK Send Get Events Error: context.Buffer must be defined.`\n  )\n\n  ix = await ix\n\n  const interactionContainsBlockHeightRange = ix.events.start !== null\n  const interactionContainsBlockIDsList =\n    Array.isArray(ix.events.blockIds) && ix.events.blockIds.length > 0\n\n  invariant(\n    interactionContainsBlockHeightRange || interactionContainsBlockIDsList,\n    \"SendGetEventsError: Unable to determine which get events request to send. Either a block height range, or block IDs must be specified.\"\n  )\n\n  if (interactionContainsBlockHeightRange) {\n    return await sendGetEventsForHeightRangeRequest(ix, context, opts)\n  } else {\n    return await sendGetEventsForBlockIDsRequest(ix, context, opts)\n  }\n}\n","import {invariant} from \"@onflow/util-invariant\"\nimport {httpRequest as defaultHttpRequest} from \"./http-request.js\"\n\nexport async function sendGetTransaction(ix, context = {}, opts = {}) {\n  invariant(\n    opts.node,\n    `SDK Send Get Transaction Error: opts.node must be defined.`\n  )\n  invariant(\n    context.response,\n    `SDK Send Get Transaction Error: context.response must be defined.`\n  )\n  invariant(\n    context.Buffer,\n    `SDK Send Get Transaction Error: context.Buffer must be defined.`\n  )\n\n  const httpRequest = opts.httpRequest || defaultHttpRequest\n\n  ix = await ix\n\n  const res = await httpRequest({\n    hostname: opts.node,\n    path: `/v1/transactions/${ix.transaction.id}`,\n    method: \"GET\",\n    body: null,\n  })\n\n  const unwrapKey = key => ({\n    address: key.address,\n    keyId: Number(key.key_id),\n    sequenceNumber: Number(key.sequence_number),\n  })\n\n  const unwrapSignature = sig => ({\n    address: sig.address,\n    keyId: Number(sig.key_index),\n    signature: sig.signature,\n  })\n\n  const unwrapArg = arg =>\n    JSON.parse(context.Buffer.from(arg, \"base64\").toString())\n\n  let ret = context.response()\n  ret.tag = ix.tag\n  ret.transaction = {\n    script: context.Buffer.from(res.script, \"base64\").toString(),\n    args: [...res.arguments.map(unwrapArg)],\n    referenceBlockId: res.reference_block_id,\n    gasLimit: Number(res.gas_limit),\n    payer: res.payer,\n    proposalKey: res.proposal_key\n      ? unwrapKey(res.proposal_key)\n      : res.proposal_key,\n    authorizers: res.authorizers,\n    payloadSignatures: [...res.payload_signatures.map(unwrapSignature)],\n    envelopeSignatures: [...res.envelope_signatures.map(unwrapSignature)],\n  }\n\n  return ret\n}\n","import {invariant} from \"@onflow/util-invariant\"\nimport {httpRequest as defaultHttpRequest} from \"./http-request.js\"\n\nconst STATUS_MAP = {\n  UNKNOWN: 0,\n  PENDING: 1,\n  FINALIZED: 2,\n  EXECUTED: 3,\n  SEALED: 4,\n  EXPIRED: 5,\n}\n\nexport async function sendGetTransactionStatus(ix, context = {}, opts = {}) {\n  invariant(\n    opts.node,\n    `SDK Send Get Transaction Status Error: opts.node must be defined.`\n  )\n  invariant(\n    context.response,\n    `SDK Send Get Transaction Status Error: context.response must be defined.`\n  )\n  invariant(\n    context.Buffer,\n    `SDK Send Get Transaction Status Error: context.Buffer must be defined.`\n  )\n\n  const httpRequest = opts.httpRequest || defaultHttpRequest\n\n  ix = await ix\n\n  const res = await httpRequest({\n    hostname: opts.node,\n    path: `/v1/transaction_results/${ix.transaction.id}`,\n    method: \"GET\",\n    body: null,\n  })\n\n  let ret = context.response()\n  ret.tag = ix.tag\n  ret.transactionStatus = {\n    blockId: res.block_id,\n    status: STATUS_MAP[res.status.toUpperCase()] || \"\",\n    statusString: res.status.toUpperCase(),\n    statusCode: res.status_code,\n    errorMessage: res.error_message,\n    events: res.events.map(event => ({\n      type: event.type,\n      transactionId: event.transaction_id,\n      transactionIndex: Number(event.transaction_index),\n      eventIndex: Number(event.event_index),\n      payload: JSON.parse(\n        context.Buffer.from(event.payload, \"base64\").toString()\n      ),\n    })),\n  }\n\n  return ret\n}\n","import {invariant} from \"@onflow/util-invariant\"\nimport {httpRequest as defaultHttpRequest} from \"./http-request.js\"\nimport {Interaction} from \"@onflow/typedefs\"\n\nexport interface ISendPingContext {\n  response?: Function\n}\n\ninterface ISendPingOpts {\n  node?: string\n  httpRequest?: any\n}\n\nexport async function sendPing(\n  ix: Interaction,\n  context: ISendPingContext = {},\n  opts: ISendPingOpts = {}\n) {\n  invariant(\n    Boolean(opts.node),\n    `SDK Send Ping Error: opts.node must be defined.`\n  )\n  invariant(\n    Boolean(context.response),\n    `SDK Send Ping Error: context.response must be defined.`\n  )\n\n  const httpRequest = opts.httpRequest || defaultHttpRequest\n\n  await httpRequest({\n    hostname: opts.node,\n    path: \"/v1/blocks?height=sealed\",\n    method: \"GET\",\n    body: null,\n  })\n\n  let ret = typeof context?.response === \"function\" ? context.response() : {}\n  ret.tag = ix.tag\n\n  return ret\n}\n","import {invariant} from \"@onflow/util-invariant\"\nimport {sansPrefix} from \"@onflow/util-address\"\nimport {httpRequest as defaultHttpRequest} from \"./http-request.js\"\n\nconst idof = acct => `${withPrefix(acct.addr)}-${acct.keyId}`\n\nexport async function sendTransaction(ix, context = {}, opts = {}) {\n  invariant(opts.node, `SDK Send Transaction Error: opts.node must be defined.`)\n  invariant(\n    context.response,\n    `SDK Send Transaction Error: context.response must be defined.`\n  )\n  invariant(\n    context.Buffer,\n    `SDK Send Transaction Error: context.Buffer must be defined.`\n  )\n\n  const httpRequest = opts.httpRequest || defaultHttpRequest\n\n  ix = await ix\n\n  // Apply Non Payer Signatures to Payload Signatures\n  let payloadSignatures = []\n  for (let acct of Object.values(ix.accounts)) {\n    try {\n      if (!acct.role.payer && acct.signature != null) {\n        const signature = {\n          address: sansPrefix(acct.addr),\n          key_index: String(acct.keyId),\n          signature: context.Buffer.from(acct.signature, \"hex\").toString(\n            \"base64\"\n          ),\n        }\n        if (\n          !payloadSignatures.find(\n            existingSignature =>\n              existingSignature.address === signature.address &&\n              existingSignature.key_index === signature.key_index &&\n              existingSignature.signature === signature.signature\n          )\n        ) {\n          payloadSignatures.push(signature)\n        }\n      }\n    } catch (error) {\n      console.error(\"SDK HTTP Send Error: Trouble applying payload signature\", {\n        acct,\n        ix,\n      })\n      throw error\n    }\n  }\n\n  // Apply Payer Signatures to Envelope Signatures\n  let envelopeSignatures = {}\n  for (let acct of Object.values(ix.accounts)) {\n    try {\n      if (acct.role.payer && acct.signature != null) {\n        let id = acct.tempId || idof(acct)\n        envelopeSignatures[id] = envelopeSignatures[id] || {\n          address: sansPrefix(acct.addr),\n          key_index: String(acct.keyId),\n          signature: context.Buffer.from(acct.signature, \"hex\").toString(\n            \"base64\"\n          ),\n        }\n      }\n    } catch (error) {\n      console.error(\n        \"SDK HTTP Send Error: Trouble applying envelope signature\",\n        {acct, ix}\n      )\n      throw error\n    }\n  }\n  envelopeSignatures = Object.values(envelopeSignatures)\n\n  var t1 = Date.now()\n  const res = await httpRequest({\n    hostname: opts.node,\n    path: `/v1/transactions`,\n    method: \"POST\",\n    body: {\n      script: context.Buffer.from(ix.message.cadence).toString(\"base64\"),\n      arguments: [\n        ...ix.message.arguments.map(arg =>\n          context.Buffer.from(\n            JSON.stringify(ix.arguments[arg].asArgument)\n          ).toString(\"base64\")\n        ),\n      ],\n      reference_block_id: ix.message.refBlock ? ix.message.refBlock : null,\n      gas_limit: String(ix.message.computeLimit),\n      payer: sansPrefix(\n        ix.accounts[Array.isArray(ix.payer) ? ix.payer[0] : ix.payer].addr\n      ),\n      proposal_key: {\n        address: sansPrefix(ix.accounts[ix.proposer].addr),\n        key_index: String(ix.accounts[ix.proposer].keyId),\n        sequence_number: String(ix.accounts[ix.proposer].sequenceNum),\n      },\n      authorizers: ix.authorizations\n        .map(tempId => ix.accounts[tempId].addr)\n        .reduce((prev, current) => {\n          return prev.find(item => item === current) ? prev : [...prev, current]\n        }, [])\n        .map(sansPrefix),\n      payload_signatures: payloadSignatures,\n      envelope_signatures: envelopeSignatures,\n    },\n  })\n  var t2 = Date.now()\n\n  let ret = context.response()\n  ret.tag = ix.tag\n  ret.transactionId = res.id\n\n  if (typeof window !== \"undefined\" && typeof CustomEvent !== \"undefined\") {\n    window.dispatchEvent(\n      new CustomEvent(\"FLOW::TX\", {\n        detail: {txId: ret.transactionId, delta: t2 - t1},\n      })\n    )\n  }\n\n  return ret\n}\n","import {invariant} from \"@onflow/util-invariant\"\nimport {httpRequest as defaultHttpRequest} from \"./http-request.js\"\n\nexport async function sendGetNetworkParameters(ix, context = {}, opts = {}) {\n  invariant(\n    opts.node,\n    `SDK Send Get Network Parameters Error: opts.node must be defined.`\n  )\n  invariant(\n    context.response,\n    `SDK Send Get Network Parameters Error: context.response must be defined.`\n  )\n\n  const httpRequest = opts.httpRequest || defaultHttpRequest\n\n  ix = await ix\n\n  const res = await httpRequest({\n    hostname: opts.node,\n    path: `/v1/network/parameters`,\n    method: \"GET\",\n    body: null,\n    enableRequestLogging: opts.enableRequestLogging ?? true,\n  })\n\n  let ret = context.response()\n  ret.tag = ix.tag\n\n  ret.networkParameters = {\n    chainId: res.chain_id,\n  }\n  return ret\n}\n","import {invariant} from \"@onflow/util-invariant\"\nimport {httpRequest as defaultHttpRequest} from \"./http-request.js\"\nimport {Interaction} from \"@onflow/typedefs\"\n\nexport async function sendGetNodeVersionInfo(\n  ix: Interaction | Promise<Interaction>,\n  context: any = {},\n  opts: any = {}\n) {\n  invariant(\n    opts.node,\n    `SDK Send Get Node Version Info Error: opts.node must be defined.`\n  )\n  invariant(\n    context.response,\n    `SDK Send Get Node Verison Info Error: context.response must be defined.`\n  )\n\n  const httpRequest = opts.httpRequest || defaultHttpRequest\n\n  ix = await ix\n\n  const res = await httpRequest({\n    hostname: opts.node,\n    path: `/v1/node_version_info`,\n    method: \"GET\",\n  })\n\n  let ret = context.response()\n  ret.tag = ix.tag\n\n  ret.nodeVersionInfo = {\n    semver: res.semver,\n    commit: res.commit,\n    sporkId: res.spork_id,\n    protocolVersion: parseInt(res.protocol_version),\n    sporkRootBlockHeight: parseInt(res.spork_root_block_height),\n    nodeRootBlockHeight: parseInt(res.node_root_block_height),\n  }\n  return ret\n}\n","import _WebSocket from \"isomorphic-ws\"\n\nexport const WebSocket = _WebSocket as new (\n  url: string | URL,\n  protocols?: string | string[] | undefined\n) => WebSocket\n","import {EventEmitter} from \"events\"\nimport {safeParseJSON} from \"./utils\"\nimport {StreamConnection} from \"@onflow/typedefs\"\nimport {WebSocket} from \"./websocket\"\n\nexport class WebsocketError extends Error {\n  code?: number\n  reason?: string\n  wasClean?: boolean\n\n  constructor({\n    code,\n    reason,\n    message,\n    wasClean,\n  }: {\n    code?: number\n    reason?: string\n    message?: string\n    wasClean?: boolean\n  }) {\n    const msg = `\n      connectWs: connection closed with error${message ? `: ${message}` : \"\"}\n      ${code ? `code: ${code}` : \"\"}\n      ${reason ? `reason: ${reason}` : \"\"}\n      ${wasClean ? `wasClean: ${wasClean}` : \"\"}\n    `\n    super(msg)\n    this.name = \"WebsocketError\"\n    this.code = code\n    this.reason = reason\n    this.wasClean = false\n  }\n}\n\ntype WebSocketConnection<T> = StreamConnection<{\n  data: T\n}>\n\nexport function connectWs<T>({\n  hostname,\n  path,\n  params,\n  getParams,\n  retryLimit = 5,\n  retryIntervalMs = 1000,\n}: {\n  hostname: string\n  path: string\n  params?: Record<string, string>\n  getParams?: () => Record<string, string> | undefined\n  retryLimit?: number\n  retryIntervalMs?: number\n}): WebSocketConnection<T> {\n  if (getParams && params) {\n    throw new Error(\"connectWs: cannot specify both params and getParams\")\n  }\n  let outputEmitter = new EventEmitter()\n\n  let retryCount = 0\n  const resolveParams = getParams || (() => params)\n  let close = () => {}\n\n  ;(function connect() {\n    let userClosed = false\n    let hasOpened = false\n\n    // Build a websocket connection with correct protocol & params\n    const url = buildConnectionUrl(hostname, path, resolveParams())\n    const ws = new WebSocket(url)\n\n    ws.onmessage = function (e) {\n      const data = safeParseJSON(e.data)\n      if (data) {\n        outputEmitter.emit(\"data\", data)\n      } else {\n        outputEmitter.emit(\n          \"error\",\n          new WebsocketError({message: \"invalid JSON data\"})\n        )\n        this.close()\n      }\n    }\n\n    ws.onclose = function (e) {\n      if (userClosed) {\n        outputEmitter.emit(\"close\")\n        outputEmitter.removeAllListeners()\n        return\n      }\n\n      if (!hasOpened) {\n        if (retryCount < retryLimit) {\n          retryCount++\n          setTimeout(connect, retryIntervalMs)\n        } else {\n          outputEmitter.emit(\n            \"error\",\n            new WebsocketError({\n              wasClean: e.wasClean,\n              code: e.code,\n              reason: e.reason,\n              message: \"failed to connect\",\n            })\n          )\n\n          // Emit close event on next tick so that the error event is emitted first\n          setTimeout(() => {\n            outputEmitter.emit(\"close\")\n            outputEmitter.removeAllListeners()\n          })\n        }\n      } else {\n        // If the connection was established before closing, attempt to reconnect\n        setTimeout(connect, retryIntervalMs)\n      }\n    }\n\n    ws.onopen = function () {\n      hasOpened = true\n      retryCount = 0\n    }\n\n    close = () => {\n      userClosed = true\n      ws.close()\n    }\n  })()\n\n  return {\n    on(event: \"data\" | \"close\" | \"error\", listener: any) {\n      outputEmitter.on(event, listener)\n      return this\n    },\n    off(event: \"data\" | \"close\" | \"error\", listener: any) {\n      outputEmitter.off(event, listener)\n      return this\n    },\n    close() {\n      close()\n    },\n  }\n}\n\nexport function buildConnectionUrl(\n  hostname: string,\n  path?: string,\n  params?: Record<\n    string,\n    string | number | string[] | number[] | null | undefined\n  >\n) {\n  const url = new URL(path || \"\", hostname)\n  if (url.protocol === \"https:\") {\n    url.protocol = \"wss:\"\n  } else if (url.protocol === \"http:\") {\n    url.protocol = \"ws:\"\n  }\n\n  Object.entries(params || {}).forEach(([key, value]) => {\n    if (value) {\n      let formattedValue: string\n      if (Array.isArray(value)) {\n        formattedValue = value.join(\",\")\n      } else {\n        formattedValue = value.toString()\n      }\n      url.searchParams.append(key, formattedValue)\n    }\n  })\n\n  return url.toString()\n}\n","import {invariant} from \"@onflow/util-invariant\"\nimport {connectWs as defaultConnectWs} from \"./connect-ws\"\nimport {EventEmitter} from \"events\"\nimport {BlockHeartbeat, Interaction, StreamConnection} from \"@onflow/typedefs\"\n\ntype RawSubscribeEventsStream = StreamConnection<{\n  data: {\n    events: any[]\n    heartbeat: BlockHeartbeat\n  }\n}>\n\nfunction constructData(ix: Interaction, context: any, data: any) {\n  const response = context.response()\n  response.tag = ix.tag\n\n  response.events =\n    data.Events?.length > 0\n      ? data.Events.map((event: any) => ({\n          blockId: data.BlockID,\n          blockHeight: Number(data.Height),\n          blockTimestamp: data.Timestamp,\n          type: event.Type,\n          transactionId: event.TransactionID,\n          transactionIndex: Number(event.TransactionIndex),\n          eventIndex: Number(event.EventIndex),\n          payload: JSON.parse(\n            context.Buffer.from(event.Payload, \"base64\").toString()\n          ),\n        }))\n      : null\n  response.heartbeat = {\n    blockId: data.BlockID,\n    blockHeight: Number(data.Height),\n    blockTimestamp: data.Timestamp,\n  }\n\n  return response\n}\n\nfunction constructResponse(ix: Interaction, context: any, stream: any) {\n  const response = context.response()\n  response.tag = ix.tag\n\n  response.streamConnection = stream\n\n  return response\n}\n\nexport async function connectSubscribeEvents(\n  ix: Interaction | Promise<Interaction>,\n  context: any = {},\n  opts: any = {}\n) {\n  invariant(opts.node, `SDK Send Get Events Error: opts.node must be defined.`)\n  invariant(\n    context.response,\n    `SDK Send Get Events Error: context.response must be defined.`\n  )\n  invariant(\n    context.Buffer,\n    `SDK Send Get Events Error: context.Buffer must be defined.`\n  )\n\n  const resolvedIx = await ix\n\n  const connectWs: typeof defaultConnectWs = opts.connectWs || defaultConnectWs\n  const outputEmitter = new EventEmitter()\n  let lastBlockHeight: string | null = null\n\n  // Connect to the websocket & provide reconnection parameters\n  const connection = connectWs<any>({\n    hostname: opts.node,\n    path: `/v1/subscribe_events`,\n    getParams: () => {\n      const params: Record<string, any> = {\n        event_types: resolvedIx.subscribeEvents?.eventTypes,\n        addresses: resolvedIx.subscribeEvents?.addresses,\n        contracts: resolvedIx.subscribeEvents?.contracts,\n        heartbeat_interval: resolvedIx.subscribeEvents?.heartbeatInterval,\n      }\n\n      // If the lastBlockId is set, use it to resume the stream\n      if (lastBlockHeight) {\n        params.start_height = lastBlockHeight + 1\n      } else {\n        params.start_block_id = resolvedIx.subscribeEvents?.startBlockId\n        params.start_height = resolvedIx.subscribeEvents?.startHeight\n      }\n\n      return params\n    },\n  })\n\n  // Map the connection to a formatted response stream\n  connection.on(\"data\", (data: any) => {\n    const responseData = constructData(resolvedIx, context, data)\n    lastBlockHeight = responseData.heartbeat.blockHeight\n    outputEmitter.emit(\"data\", responseData)\n  })\n  connection.on(\"error\", (error: Error) => {\n    outputEmitter.emit(\"error\", error)\n  })\n  connection.on(\"close\", () => {\n    outputEmitter.emit(\"close\")\n  })\n\n  const responseStream: RawSubscribeEventsStream = {\n    on(event: \"data\" | \"error\" | \"close\" | \"open\", listener: any) {\n      outputEmitter.on(event, listener)\n      return this\n    },\n    off(event: \"data\" | \"error\" | \"close\" | \"open\", listener: any) {\n      outputEmitter.off(event, listener)\n      return this\n    },\n    close() {\n      connection.close()\n    },\n  }\n  return constructResponse(resolvedIx, context, responseStream)\n}\n","import {invariant} from \"@onflow/util-invariant\"\nimport {sendTransaction} from \"./send-transaction.js\"\nimport {sendGetTransactionStatus} from \"./send-get-transaction-status.js\"\nimport {sendGetTransaction} from \"./send-get-transaction.js\"\nimport {sendExecuteScript} from \"./send-execute-script.js\"\nimport {sendGetAccount} from \"./send-get-account.js\"\nimport {sendGetEvents} from \"./send-get-events.js\"\nimport {connectSubscribeEvents} from \"./connect-subscribe-events.js\"\nimport {sendGetBlock} from \"./send-get-block.js\"\nimport {sendGetBlockHeader} from \"./send-get-block-header.js\"\nimport {sendGetCollection} from \"./send-get-collection.js\"\nimport {sendPing, ISendPingContext} from \"./send-ping\"\nimport {sendGetNetworkParameters} from \"./send-get-network-parameters.js\"\nimport {Interaction} from \"@onflow/typedefs\"\nimport {sendGetNodeVersionInfo} from \"./send-get-node-version-info.js\"\n\ninterface InteractionModule {\n  isTransaction: (ix: Interaction) => boolean\n  isGetTransactionStatus: (ix: Interaction) => boolean\n  isGetTransaction: (ix: Interaction) => boolean\n  isScript: (ix: Interaction) => boolean\n  isGetAccount: (ix: Interaction) => boolean\n  isGetEvents: (ix: Interaction) => boolean\n  isGetBlock: (ix: Interaction) => boolean\n  isGetBlockHeader: (ix: Interaction) => boolean\n  isGetCollection: (ix: Interaction) => boolean\n  isPing: (ix: Interaction) => boolean\n  isGetNetworkParameters: (ix: Interaction) => boolean\n  isSubscribeEvents?: (ix: Interaction) => boolean\n  isGetNodeVersionInfo?: (ix: Interaction) => boolean\n}\ninterface IContext extends ISendPingContext {\n  ix: InteractionModule\n}\n\ninterface IOptsCommon {\n  node?: string\n}\n\ninterface IOpts extends IOptsCommon {\n  sendTransaction?: (\n    ix: Interaction,\n    context: IContext,\n    opts: IOptsCommon\n  ) => void\n  sendGetTransactionStatus?: (\n    ix: Interaction,\n    context: IContext,\n    opts: IOptsCommon\n  ) => void\n  sendGetTransaction?: (\n    ix: Interaction,\n    context: IContext,\n    opts: IOptsCommon\n  ) => void\n  sendExecuteScript?: (\n    ix: Interaction,\n    context: IContext,\n    opts: IOptsCommon\n  ) => void\n  sendGetAccount?: (\n    ix: Interaction,\n    context: IContext,\n    opts: IOptsCommon\n  ) => void\n  sendGetEvents?: (\n    ix: Interaction,\n    context: IContext,\n    opts: IOptsCommon\n  ) => void\n  sendGetBlockHeader?: (\n    ix: Interaction,\n    context: IContext,\n    opts: IOptsCommon\n  ) => void\n  sendGetCollection?: (\n    ix: Interaction,\n    context: IContext,\n    opts: IOptsCommon\n  ) => void\n  sendPing?: (ix: Interaction, context: IContext, opts: IOptsCommon) => void\n  sendGetBlock?: (ix: Interaction, context: IContext, opts: IOptsCommon) => void\n  sendGetNetworkParameters?: (\n    ix: Interaction,\n    context: IContext,\n    opts: IOptsCommon\n  ) => void\n  connectSubscribeEvents?: (\n    ix: Interaction,\n    context: IContext,\n    opts: IOptsCommon\n  ) => void\n  sendGetNodeVersionInfo?: (\n    ix: Interaction,\n    context: IContext,\n    opts: IOptsCommon\n  ) => void\n}\n\nexport const send = async (\n  ix: Interaction,\n  context: IContext,\n  opts: IOpts = {}\n) => {\n  invariant(\n    Boolean(opts?.node),\n    `SDK Send Error: Either opts.node or \"accessNode.api\" in config must be defined.`\n  )\n  invariant(Boolean(context.ix), `SDK Send Error: context.ix must be defined.`)\n\n  ix = await ix\n\n  // prettier-ignore\n  switch (true) {\n    case context.ix.isTransaction(ix):\n      return opts.sendTransaction ? opts.sendTransaction(ix, context, opts) : sendTransaction(ix, context, opts)\n    case context.ix.isGetTransactionStatus(ix):\n      return opts.sendGetTransactionStatus ? opts.sendGetTransactionStatus(ix, context, opts) : sendGetTransactionStatus(ix, context, opts)\n    case context.ix.isGetTransaction(ix):\n      return opts.sendGetTransaction ? opts.sendGetTransaction(ix, context, opts) : sendGetTransaction(ix, context, opts)\n    case context.ix.isScript(ix):\n      return opts.sendExecuteScript ? opts.sendExecuteScript(ix, context, opts) : sendExecuteScript(ix, context, opts)\n    case context.ix.isGetAccount(ix):\n      return opts.sendGetAccount ? opts.sendGetAccount(ix, context, opts) : sendGetAccount(ix, context, opts)\n    case context.ix.isGetEvents(ix):\n      return opts.sendGetEvents ? opts.sendGetEvents(ix, context, opts) : sendGetEvents(ix, context, opts)\n    case context.ix.isSubscribeEvents?.(ix):\n      return opts.connectSubscribeEvents ? opts.connectSubscribeEvents(ix, context, opts) : connectSubscribeEvents(ix, context, opts)\n    case context.ix.isGetBlock(ix):\n      return opts.sendGetBlock ? opts.sendGetBlock(ix, context, opts) : sendGetBlock(ix, context, opts)\n    case context.ix.isGetBlockHeader(ix):\n      return opts.sendGetBlockHeader ? opts.sendGetBlockHeader(ix, context, opts) : sendGetBlockHeader(ix, context, opts)\n    case context.ix.isGetCollection(ix):\n      return opts.sendGetCollection ? opts.sendGetCollection(ix, context, opts) : sendGetCollection(ix, context, opts)\n    case context.ix.isPing(ix):\n      return opts.sendPing ? opts.sendPing(ix, context, opts) : sendPing(ix, context, opts)\n    case context.ix.isGetNetworkParameters(ix):\n      return opts.sendGetNetworkParameters ? opts.sendGetNetworkParameters(ix, context, opts) : sendGetNetworkParameters(ix, context, opts)\n    case context.ix.isGetNodeVersionInfo?.(ix):\n      return opts.sendGetNodeVersionInfo ? opts.sendGetNodeVersionInfo(ix, context, opts) : sendGetNodeVersionInfo(ix, context, opts)\n    default:\n      return ix\n  }\n}\n"],"names":["safeParseJSON","data","JSON","parse","combineURLs","baseURL","relativeURL","replace","AbortController","globalThis","require","HTTPRequestError","Error","constructor","_ref","error","hostname","path","method","requestBody","responseBody","responseStatusText","statusCode","msg","name","errorMessage","httpRequest","_ref2","body","headers","retryLimit","retryIntervalMs","timeoutLimit","enableRequestLogging","bodyJSON","stringify","makeRequest","controller","fetchTimeout","setTimeout","abort","fetchTransport","toString","signal","then","res","ok","json","responseText","text","catch","response","message","statusText","status","e","logger","log","title","level","LEVELS","finally","clearTimeout","requestLoop","retryAttempt","arguments","length","undefined","resp","retryStatusCodes","includes","Promise","resolve","reject","console","warn","sendExecuteScriptAtBlockIDRequest","ix","context","opts","defaultHttpRequest","node","block","id","script","Buffer","from","cadence","map","arg","asArgument","constructResponse","sendExecuteScriptAtBlockHeightRequest","height","sendExecuteScriptAtLatestBlockRequest","ret","tag","encodedData","sendExecuteScript","invariant","HashAlgorithmIDs","SHA2_256","SHA2_384","SHA3_256","SHA3_384","KMAC128_BLS_BLS12_381","SignatureAlgorithmIDs","ECDSA_P256","ECDSA_secp256k1","BLS_BLS12_381","sendGetAccountAtBlockHeightRequest","account","addr","sendGetAccountAtLatestBlockRequest","unwrapContracts","contracts","c","key","Object","keys","address","balance","Number","code","index","publicKey","public_key","signAlgo","signing_algorithm","signAlgoString","hashAlgo","hashing_algorithm","hashAlgoString","sequenceNumber","sequence_number","weight","revoked","sendGetAccount","sendGetBlockHeaderByIDRequest","sendGetBlockHeaderByHeightRequest","sendGetLatestBlockHeaderRequest","isSealed","blockHeader","header","parentId","parent_id","timestamp","sendGetBlockHeader","interactionHasBlockID","interactionHasBlockHeight","sendGetBlockByIDRequest","sendGetBlockByHeightRequest","sendGetBlockRequest","collectionGuarantees","payload","collection_guarantees","collectionGuarantee","collectionId","collection_id","signerIds","signer_ids","blockSeals","block_seals","blockSeal","blockId","block_id","executionReceiptId","result_id","sendGetBlock","sendGetCollection","collection","transactionIds","transactions","transaction","sendGetEventsForHeightRangeRequest","events","eventType","start","end","sendGetEventsForBlockIDsRequest","blockIds","join","forEach","event","push","blockHeight","block_height","blockTimestamp","block_timestamp","type","transactionId","transaction_id","transactionIndex","transaction_index","eventIndex","event_index","sendGetEvents","interactionContainsBlockHeightRange","interactionContainsBlockIDsList","Array","isArray","sendGetTransaction","unwrapKey","keyId","key_id","unwrapSignature","sig","key_index","signature","unwrapArg","args","referenceBlockId","reference_block_id","gasLimit","gas_limit","payer","proposalKey","proposal_key","authorizers","payloadSignatures","payload_signatures","envelopeSignatures","envelope_signatures","STATUS_MAP","UNKNOWN","PENDING","FINALIZED","EXECUTED","SEALED","EXPIRED","sendGetTransactionStatus","transactionStatus","toUpperCase","statusString","status_code","error_message","sendPing","Boolean","idof","acct","withPrefix","sendTransaction","values","accounts","role","sansPrefix","String","find","existingSignature","tempId","t1","Date","now","refBlock","computeLimit","proposer","sequenceNum","authorizations","reduce","prev","current","item","t2","window","CustomEvent","dispatchEvent","detail","txId","delta","sendGetNetworkParameters","networkParameters","chainId","chain_id","sendGetNodeVersionInfo","nodeVersionInfo","semver","commit","sporkId","spork_id","protocolVersion","parseInt","protocol_version","sporkRootBlockHeight","spork_root_block_height","nodeRootBlockHeight","node_root_block_height","WebSocket","_WebSocket","WebsocketError","reason","wasClean","connectWs","params","getParams","outputEmitter","EventEmitter","retryCount","resolveParams","close","connect","userClosed","hasOpened","url","buildConnectionUrl","ws","onmessage","emit","onclose","removeAllListeners","onopen","on","listener","off","URL","protocol","entries","_ref3","value","formattedValue","searchParams","append","constructData","Events","BlockID","Height","Timestamp","Type","TransactionID","TransactionIndex","EventIndex","Payload","heartbeat","stream","streamConnection","connectSubscribeEvents","resolvedIx","defaultConnectWs","lastBlockHeight","connection","event_types","subscribeEvents","eventTypes","addresses","heartbeat_interval","heartbeatInterval","start_height","start_block_id","startBlockId","startHeight","responseData","responseStream","send","isTransaction","isGetTransactionStatus","isGetTransaction","isScript","isGetAccount","isGetEvents","isSubscribeEvents","isGetBlock","isGetBlockHeader","isGetCollection","isPing","isGetNetworkParameters","isGetNodeVersionInfo"],"mappings":"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"}