type FlowNetwork = "emulator" | "testnet" | "mainnet" | "previewnet";
export interface FlowJson {
    networks?: {
        [key in FlowNetwork]?: string;
    };
    accounts?: {
        [key: string]: {
            address: string;
            key?: string | object;
        };
    };
    contracts?: {
        [key: string]: {
            source: string;
            aliases: {
                [key in FlowNetwork]?: string;
            };
        };
    };
    dependencies?: {
        [key: string]: {
            source: string;
            hash: string;
            aliases: {
                [key in FlowNetwork]?: string;
            };
        };
    };
    deployments?: {
        [key in FlowNetwork]?: {
            [contract: string]: string[];
        };
    };
}
/**
 * @description Support if/then/else behavior in a function way.
 * @param testFn - Function to test
 * @param posCond - Function to run if testFn is true
 * @param negCond - Function to run it testFn is false
 * @returns Function that returns the result of posCond or negCond
 */
export declare const ifElse: <T, U>(testFn: (v: T) => U, posCond: (v: T) => U, negCond: (v: T) => U) => (v: T) => U;
/**
 * @description Take in flow.json files and return contract to address mapping by network
 * @param jsons - Flow JSON or array of Flow JSONs
 * @param network - Network to gather addresses for
 * @returns Contract names by addresses mapping e.g { "HelloWorld": "0x123" }
 */
export declare const getContracts: (jsons: FlowJson | FlowJson[], network: FlowNetwork) => any;
/**
 * @description Take in flow.json or array of flow.json files and checks for private keys
 * @param value - Flow JSON or array of Flow JSONs
 * @returns Has private keys status
 */
export declare const anyHasPrivateKeys: (value: FlowJson | FlowJson[]) => boolean;
/**
 * @description Format network to always be 'emulator', 'testnet', 'previewnet' or 'mainnet'
 * @param network - Network to format
 * @returns Formatted network name (either 'emulator', 'testnet', 'previewnet' or 'mainnet')
 */
export declare const cleanNetwork: (network: string) => FlowNetwork;
export {};
