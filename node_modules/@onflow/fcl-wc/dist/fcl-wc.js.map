{"version":3,"file":"fcl-wc.js","sources":["../src/utils.ts","../src/constants.ts","../src/service.ts","../src/fcl-wc.ts"],"sourcesContent":["import {log, LEVELS} from \"@onflow/util-logger\"\nimport {invariant} from \"@onflow/util-invariant\"\nimport * as fclCore from \"@onflow/fcl-core\"\n\nconst makeFlowServicesFromWallets = (wallets: any[]) => {\n  return Object.values(wallets)\n    .filter(w => w.app_type === \"wallet\")\n    .map(wallet => {\n      return {\n        f_type: \"Service\",\n        f_vsn: \"1.0.0\",\n        type: \"authn\",\n        method: \"WC/RPC\",\n        uid: wallet.mobile?.universal,\n        endpoint: \"flow_authn\",\n        optIn: true,\n        provider: {\n          address: null,\n          name: wallet.name,\n          icon: wallet.image_url?.sm,\n          description: wallet.description,\n          website: wallet.homepage,\n          color: wallet.metadata?.colors?.primary,\n          supportEmail: null,\n        },\n      }\n    })\n}\n\nexport const fetchFlowWallets = async (projectId: string) => {\n  try {\n    const network = await fclCore.getChainId()\n    const wcApiWallets = await fetch(\n      `https://explorer-api.walletconnect.com/v3/wallets?projectId=${projectId}&chains=flow:${network}&entries=5&page=1`\n    ).then(res => res.json())\n\n    if (wcApiWallets?.count > 0) {\n      return makeFlowServicesFromWallets(wcApiWallets.listings)\n    }\n\n    return []\n  } catch (error) {\n    if (error instanceof Error) {\n      log({\n        title: `${error.name} Error fetching wallets from WalletConnect API`,\n        message: error.message,\n        level: LEVELS.error,\n      })\n    }\n  }\n}\n\nexport function isAndroid() {\n  return (\n    typeof navigator !== \"undefined\" && /android/i.test(navigator.userAgent)\n  )\n}\n\nexport function isSmallIOS() {\n  return (\n    typeof navigator !== \"undefined\" && /iPhone|iPod/.test(navigator.userAgent)\n  )\n}\n\nexport function isLargeIOS() {\n  return typeof navigator !== \"undefined\" && /iPad/.test(navigator.userAgent)\n}\n\nexport function isIOS() {\n  return isSmallIOS() || isLargeIOS()\n}\n\nexport function isMobile() {\n  return isAndroid() || isIOS()\n}\n","export enum FLOW_METHODS {\n  FLOW_AUTHN = \"flow_authn\",\n  FLOW_PRE_AUTHZ = \"flow_pre_authz\",\n  FLOW_AUTHZ = \"flow_authz\",\n  FLOW_USER_SIGN = \"flow_user_sign\",\n}\n\nexport enum REQUEST_TYPES {\n  SESSION_REQUEST = \"session_proposal\",\n  SIGNING_REQUEST = \"signing_request\",\n}\n","import {invariant} from \"@onflow/util-invariant\"\nimport {log, LEVELS} from \"@onflow/util-logger\"\nimport {isMobile, isIOS} from \"./utils\"\nimport {FLOW_METHODS, REQUEST_TYPES} from \"./constants\"\nimport {SignClient} from \"@walletconnect/sign-client/dist/types/client\"\nimport * as fclCore from \"@onflow/fcl-core\"\n\nexport const SERVICE_PLUGIN_NAME = \"fcl-plugin-service-walletconnect\"\nexport const WC_SERVICE_METHOD = \"WC/RPC\"\n\nexport const makeServicePlugin = (\n  client: Promise<SignClient | null>,\n  opts: {\n    projectId: string\n    includeBaseWC: boolean\n    wallets: any[]\n    wcRequestHook: any\n    pairingModalOverride: any\n  } = {\n    projectId: \"\",\n    includeBaseWC: false,\n    wallets: [],\n    wcRequestHook: null,\n    pairingModalOverride: null,\n  }\n) => ({\n  name: SERVICE_PLUGIN_NAME,\n  f_type: \"ServicePlugin\",\n  type: \"discovery-service\",\n  serviceStrategy: {\n    method: WC_SERVICE_METHOD,\n    exec: makeExec(\n      client,\n      opts,\n      import(\"@walletconnect/modal\").then(m => m.WalletConnectModal)\n    ),\n  },\n  services: [],\n})\n\nconst makeExec = (\n  clientPromise: Promise<SignClient | null>,\n  {wcRequestHook, pairingModalOverride}: any,\n  WalletConnectModal: Promise<\n    typeof import(\"@walletconnect/modal\").WalletConnectModal\n  >\n) => {\n  return ({service, body, opts}: {service: any; body: any; opts: any}) => {\n    return new Promise(async (resolve, reject) => {\n      const client = await clientPromise\n      invariant(!!client, \"WalletConnect is not initialized\")\n\n      let session, pairing, windowRef: any\n      const method = service.endpoint\n      const appLink = validateAppLink(service)\n      const pairings = client.pairing.getAll({active: true})\n\n      if (pairings.length > 0) {\n        pairing = pairings?.find(p => p.peerMetadata?.url === service.uid)\n      }\n\n      if (client.session.length > 0) {\n        const lastKeyIndex = client.session.keys.length - 1\n        session = client.session.get(client.session.keys.at(lastKeyIndex)!)\n      }\n\n      if (isMobile()) {\n        if (opts.windowRef) {\n          windowRef = opts.windowRef\n        } else {\n          windowRef = window.open(\"\", \"_blank\")\n        }\n      }\n\n      if (session == null) {\n        session = await connectWc(WalletConnectModal)({\n          service,\n          onClose,\n          appLink,\n          windowRef,\n          client,\n          method,\n          pairing,\n          wcRequestHook,\n          pairingModalOverride,\n        })\n      }\n\n      if (wcRequestHook && wcRequestHook instanceof Function) {\n        wcRequestHook({\n          type: REQUEST_TYPES.SIGNING_REQUEST,\n          method,\n          service,\n          session: session ?? null,\n          pairing: pairing ?? null,\n          uri: null,\n        })\n      }\n\n      if (isMobile() && method !== FLOW_METHODS.FLOW_AUTHN) {\n        openDeepLink()\n      }\n\n      const [chainId, addr, address] = makeSessionData(session)\n      const data = JSON.stringify({...body, addr, address})\n\n      try {\n        const result = await client.request({\n          topic: session.topic,\n          chainId,\n          request: {\n            method,\n            params: [data],\n          },\n        })\n        onResponse(result)\n      } catch (error) {\n        if (error instanceof Error) {\n          log({\n            title: `${error.name} Error on WalletConnect client ${method} request`,\n            message: error.message,\n            level: LEVELS.error,\n          })\n        }\n        reject(`Declined: Externally Halted`)\n      } finally {\n        if (windowRef && !windowRef.closed) {\n          windowRef.close()\n        }\n      }\n\n      function validateAppLink({uid}: {uid: string}) {\n        if (!(uid && /^(ftp|http|https):\\/\\/[^ \"]+$/.test(uid))) {\n          log({\n            title: \"WalletConnect Service Warning\",\n            message: `service.uid should be a valid universal link url. Found: ${uid}`,\n            level: LEVELS.warn,\n          })\n        }\n        return uid\n      }\n\n      function openDeepLink() {\n        if (windowRef) {\n          if (appLink.startsWith(\"http\") && !isIOS()) {\n            // Workaround for https://github.com/rainbow-me/rainbowkit/issues/524.\n            // Using 'window.open' causes issues on iOS in non-Safari browsers and\n            // WebViews where a blank tab is left behind after connecting.\n            // This is especially bad in some WebView scenarios (e.g. following a\n            // link from Twitter) where the user doesn't have any mechanism for\n            // closing the blank tab.\n            // For whatever reason, links with a target of \"_blank\" don't suffer\n            // from this problem, and programmatically clicking a detached link\n            // element with the same attributes also avoids the issue.\n            const link = document.createElement(\"a\")\n            link.href = appLink\n            link.target = \"_blank\"\n            link.rel = \"noreferrer noopener\"\n            link.click()\n          } else {\n            windowRef.location.href = appLink\n          }\n        } else {\n          log({\n            title: \"Problem opening deep link in new window\",\n            message: `Window failed to open (was it blocked by the browser?)`,\n            level: LEVELS.warn,\n          })\n        }\n      }\n\n      function makeSessionData(session: any) {\n        const [namespace, reference, address] = Object.values<any>(\n          session.namespaces\n        )\n          .map(namespace => namespace.accounts)\n          .flat()\n          .filter(account => account.startsWith(\"flow:\"))[0]\n          .split(\":\")\n\n        const chainId = `${namespace}:${reference}`\n        const addr = address\n        return [chainId, addr, address]\n      }\n\n      function onResponse(resp: any) {\n        try {\n          if (typeof resp !== \"object\") return\n\n          switch (resp.status) {\n            case \"APPROVED\":\n              resolve(resp.data)\n              break\n\n            case \"DECLINED\":\n              reject(`Declined: ${resp.reason || \"No reason supplied\"}`)\n              break\n\n            case \"REDIRECT\":\n              resolve(resp)\n              break\n\n            default:\n              reject(`Declined: No reason supplied`)\n              break\n          }\n        } catch (error) {\n          if (error instanceof Error) {\n            log({\n              title: `${error.name} \"WC/RPC onResponse error\"`,\n              message: error.message,\n              level: LEVELS.error,\n            })\n          }\n          throw error\n        }\n      }\n\n      function onClose() {\n        reject(`Declined: Externally Halted`)\n      }\n    })\n  }\n}\n\nfunction connectWc(\n  WalletConnectModal: Promise<\n    typeof import(\"@walletconnect/modal\").WalletConnectModal\n  >\n) {\n  return async ({\n    service,\n    onClose,\n    appLink,\n    windowRef,\n    client,\n    method,\n    pairing,\n    wcRequestHook,\n    pairingModalOverride,\n  }: {\n    service: any\n    onClose: any\n    appLink: string\n    windowRef: any\n    client: SignClient\n    method: string\n    pairing: any\n    wcRequestHook: any\n    pairingModalOverride: any\n  }) => {\n    const network = await fclCore.getChainId()\n\n    const requiredNamespaces = {\n      flow: {\n        methods: [\n          FLOW_METHODS.FLOW_AUTHN,\n          FLOW_METHODS.FLOW_PRE_AUTHZ,\n          FLOW_METHODS.FLOW_AUTHZ,\n          FLOW_METHODS.FLOW_USER_SIGN,\n        ],\n        chains: [`flow:${network}`],\n        events: [\"chainChanged\", \"accountsChanged\"],\n      },\n    }\n\n    invariant(\n      !!client.opts?.projectId,\n      \"Cannot establish connection, WalletConnect projectId is undefined\"\n    )\n\n    const projectId = client.opts?.projectId\n    const walletConnectModal = new (await WalletConnectModal)({\n      projectId,\n      walletConnectVersion: 2,\n    })\n\n    try {\n      const {uri, approval} = await client.connect({\n        pairingTopic: pairing?.topic,\n        requiredNamespaces,\n      })\n      var _uri = uri\n\n      if (wcRequestHook && wcRequestHook instanceof Function) {\n        wcRequestHook({\n          type: REQUEST_TYPES.SESSION_REQUEST,\n          method,\n          service,\n          session: null,\n          pairing: pairing ?? null,\n          uri: uri ?? null,\n        })\n      }\n\n      invariant(\n        !!uri,\n        \"Cannot establish connection, WalletConnect URI is undefined\"\n      )\n\n      if (isMobile()) {\n        const queryString = new URLSearchParams({uri: uri}).toString()\n        let url = pairing == null ? appLink + \"?\" + queryString : appLink\n        windowRef.location.href = url\n      } else if (!pairing) {\n        if (!pairingModalOverride) {\n          walletConnectModal.openModal({uri, onClose})\n        } else {\n          pairingModalOverride(uri, onClose)\n        }\n      }\n\n      const session = await approval()\n      return session\n    } catch (error) {\n      if (error instanceof Error) {\n        log({\n          title: `${error.name} Error establishing WalletConnect session`,\n          message: `\n          ${error.message}\n          uri: ${_uri}\n        `,\n          level: LEVELS.error,\n        })\n      }\n      onClose()\n      throw error\n    } finally {\n      if (windowRef && !windowRef.closed) {\n        windowRef.close()\n      }\n      walletConnectModal.closeModal()\n    }\n  }\n}\n","import * as fclCore from \"@onflow/fcl-core\"\nimport SignClient from \"@walletconnect/sign-client\"\nimport {invariant} from \"@onflow/util-invariant\"\nimport {LEVELS, log} from \"@onflow/util-logger\"\nexport {getSdkError} from \"@walletconnect/utils\"\nimport {SERVICE_PLUGIN_NAME, makeServicePlugin} from \"./service\"\nimport {CoreTypes} from \"@walletconnect/types\"\n\nexport interface FclWalletConnectConfig {\n  projectId: string\n  metadata?: CoreTypes.Metadata\n  includeBaseWC?: boolean\n  wcRequestHook?: any\n  pairingModalOverride?: any\n  wallets?: any[]\n}\n\nconst DEFAULT_RELAY_URL = \"wss://relay.walletconnect.com\"\nconst DEFAULT_LOGGER = \"debug\"\nlet clientPromise: Promise<SignClient | null> = Promise.resolve(null)\n\nconst initClient = async ({\n  projectId,\n  metadata,\n}: {\n  projectId: string\n  metadata?: CoreTypes.Metadata\n}) => {\n  invariant(\n    projectId != null,\n    \"FCL Wallet Connect Error: WalletConnect projectId is required\"\n  )\n  try {\n    return SignClient.init({\n      logger: DEFAULT_LOGGER,\n      relayUrl: DEFAULT_RELAY_URL,\n      projectId: projectId,\n      metadata: metadata,\n    })\n  } catch (error) {\n    if (error instanceof Error) {\n      log({\n        title: `${error.name} fcl-wc Init Client`,\n        message: error.message,\n        level: LEVELS.error,\n      })\n    }\n    throw error\n  }\n}\n\nexport const initLazy = (config: FclWalletConnectConfig) => {\n  const {FclWcServicePlugin, clientPromise} = initHelper(config)\n  fclCore.discovery.authn.update()\n\n  return {\n    FclWcServicePlugin,\n    clientPromise,\n  }\n}\n\nexport const init = async (config: FclWalletConnectConfig) => {\n  const {FclWcServicePlugin, clientPromise} = initLazy(config)\n  const client = await clientPromise\n  fclCore.discovery.authn.update()\n\n  return {\n    FclWcServicePlugin,\n    client,\n  }\n}\n\nconst initHelper = ({\n  projectId,\n  metadata,\n  includeBaseWC = false,\n  wcRequestHook = null,\n  pairingModalOverride = null,\n  wallets = [],\n}: FclWalletConnectConfig) => {\n  if (typeof window === \"undefined\") {\n    throw new Error(\n      \"FCL Wallet Connect Plugin can only be initialized in the browser\"\n    )\n  }\n\n  // Lazy load the SignClient\n  //  - Initialize the client if it doesn't exist\n  //  - If it does exist, return existing client\n  //  - If existing client fails to initialize, reinitialize\n  clientPromise = Promise.resolve(clientPromise)\n    .catch(() => null)\n    .then(_client => {\n      if (_client) {\n        return _client\n      } else {\n        return initClient({projectId, metadata})\n      }\n    })\n    .catch(e => {\n      log({\n        title: `WalletConnect Client Initialization Error`,\n        message: e.message ? e.message : e,\n        level: LEVELS.error,\n      })\n      throw e\n    })\n\n  const FclWcServicePlugin = makeServicePlugin(clientPromise, {\n    projectId,\n    includeBaseWC,\n    wcRequestHook,\n    pairingModalOverride,\n    wallets,\n  })\n\n  return {\n    FclWcServicePlugin,\n    clientPromise,\n  }\n}\n\nexport {SERVICE_PLUGIN_NAME}\n"],"names":["isAndroid","navigator","test","userAgent","isSmallIOS","isLargeIOS","isIOS","isMobile","FLOW_METHODS","REQUEST_TYPES","SERVICE_PLUGIN_NAME","WC_SERVICE_METHOD","makeServicePlugin","client","opts","arguments","length","undefined","projectId","includeBaseWC","wallets","wcRequestHook","pairingModalOverride","name","f_type","type","serviceStrategy","method","exec","makeExec","then","m","WalletConnectModal","services","clientPromise","_ref","_ref2","service","body","Promise","resolve","reject","invariant","session","pairing","windowRef","endpoint","appLink","validateAppLink","pairings","getAll","active","find","p","peerMetadata","url","uid","lastKeyIndex","keys","get","at","window","open","connectWc","onClose","Function","SIGNING_REQUEST","uri","FLOW_AUTHN","openDeepLink","chainId","addr","address","makeSessionData","data","JSON","stringify","result","request","topic","params","onResponse","error","Error","log","title","message","level","LEVELS","closed","close","_ref3","warn","startsWith","link","document","createElement","href","target","rel","click","location","namespace","reference","Object","values","namespaces","map","accounts","flat","filter","account","split","resp","status","reason","_ref4","network","fclCore","getChainId","requiredNamespaces","flow","methods","FLOW_PRE_AUTHZ","FLOW_AUTHZ","FLOW_USER_SIGN","chains","events","walletConnectModal","walletConnectVersion","approval","connect","pairingTopic","_uri","SESSION_REQUEST","queryString","URLSearchParams","toString","openModal","closeModal","DEFAULT_RELAY_URL","DEFAULT_LOGGER","initClient","metadata","SignClient","init","logger","relayUrl","initLazy","config","FclWcServicePlugin","initHelper","discovery","authn","update","catch","_client","e"],"mappings":"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"}