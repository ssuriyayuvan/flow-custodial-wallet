{"version":3,"file":"sdk.js","sources":["../src/interaction/interaction.ts","../src/build/build.js","../src/response/response.ts","../src/build/build-get-block.js","../src/build/build-get-account.js","../src/decode/decode-stream.ts","../src/decode/decode.js","../src/resolve/resolve-cadence.js","../src/resolve/resolve-arguments.js","../src/encode/encode.ts","../src/resolve/voucher.ts","../src/resolve/resolve-accounts.ts","../src/resolve/resolve-signatures.ts","../src/resolve/resolve-validators.js","../src/resolve/resolve-final-normalization.js","../src/resolve/resolve-voucher-intercept.js","../src/resolve/resolve-compute-limit.js","../src/resolve/resolve.js","../src/build/build-invariant.js","../src/send/send.js","../src/decode/sdk-decode.js","../src/wallet-utils/encode-signable.js","../src/build/build-validator.js","../src/build/build-at-block-height.js","../src/build/build-at-block-id.js","../src/account/account.js","../src/block/block.js","../src/build/build-get-node-version-info.ts","../src/node-version-info/node-version-info.ts","../src/build/build-authorizations.js","../src/build/build-get-events.js","../src/build/build-get-events-at-block-height-range.js","../src/build/build-get-events-at-block-ids.js","../src/build/build-get-block-header.js","../src/build/build-get-collection.js","../src/build/build-get-transaction-status.js","../src/build/build-get-transaction.js","../src/build/build-get-network-parameters.js","../src/build/build-limit.js","../src/build/build-arguments.ts","../src/build/build-proposer.js","../src/build/build-payer.js","../src/build/build-ping.js","../src/build/build-ref.js","../src/build/build-script.js","../src/build/build-transaction.js","../src/build/build-voucher-intercept.js","../src/build/build-subscribe-events.ts","../src/resolve/resolve-proposer-sequence-number.js","../src/resolve/resolve-ref-block-id.js","../src/test-utils/mock-send.js","../src/test-utils/authz-fn.ts","../src/test-utils/run.js","../src/VERSION.js","../src/sdk.ts"],"sourcesContent":["import {invariant} from \"@onflow/util-invariant\"\nimport {v4 as uuidv4} from \"uuid\"\nimport {log, LEVELS} from \"@onflow/util-logger\"\n\nimport {\n  TransactionRole,\n  Interaction,\n  InteractionAccount,\n  InteractionResolverKind,\n  InteractionStatus,\n  InteractionTag,\n} from \"@onflow/typedefs\"\nimport {TypeDescriptor, TypeDescriptorInput} from \"@onflow/types\"\n\ntype AcctFn = (acct: InteractionAccount) => InteractionAccount\ntype AccountFn = AcctFn & Partial<InteractionAccount>\n\ntype CadenceArgument<T extends TypeDescriptor<any, any>> = {\n  value: TypeDescriptorInput<T>\n  xform: T\n}\n\nexport {CadenceArgument}\n\nconst ACCT = `{\n  \"kind\":\"${InteractionResolverKind.ACCOUNT}\",\n  \"tempId\":null,\n  \"addr\":null,\n  \"keyId\":null,\n  \"sequenceNum\":null,\n  \"signature\":null,\n  \"signingFunction\":null,\n  \"resolve\":null,\n  \"role\": {\n    \"proposer\":false,\n    \"authorizer\":false,\n    \"payer\":false,\n    \"param\":false\n  }\n}`\n\nconst ARG = `{\n  \"kind\":\"${InteractionResolverKind.ARGUMENT}\",\n  \"tempId\":null,\n  \"value\":null,\n  \"asArgument\":null,\n  \"xform\":null,\n  \"resolve\": null,\n  \"resolveArgument\": null\n}`\n\nconst IX = `{\n  \"tag\":\"${InteractionTag.UNKNOWN}\",\n  \"assigns\":{},\n  \"status\":\"${InteractionStatus.OK}\",\n  \"reason\":null,\n  \"accounts\":{},\n  \"params\":{},\n  \"arguments\":{},\n  \"message\": {\n    \"cadence\":null,\n    \"refBlock\":null,\n    \"computeLimit\":null,\n    \"proposer\":null,\n    \"payer\":null,\n    \"authorizations\":[],\n    \"params\":[],\n    \"arguments\":[]\n  },\n  \"proposer\":null,\n  \"authorizations\":[],\n  \"payer\":[],\n  \"events\": {\n    \"eventType\":null,\n    \"start\":null,\n    \"end\":null,\n    \"blockIds\":[]\n  },\n  \"subscribeEvents\": {\n    \"startBlockId\":null,\n    \"startHeight\":null,\n    \"eventTypes\":null,\n    \"addresses\":null,\n    \"contracts\":null,\n    \"heartbeatInterval\":null\n  },\n  \"transaction\": {\n    \"id\":null\n  },\n  \"block\": {\n    \"id\":null,\n    \"height\":null,\n    \"isSealed\":null\n  },\n  \"account\": {\n    \"addr\":null\n  },\n  \"collection\": {\n    \"id\":null\n  }\n}`\n\nconst KEYS = new Set(Object.keys(JSON.parse(IX) as Interaction))\n\nexport const initInteraction = (): Interaction => JSON.parse(IX)\n/**\n * @deprecated\n */\nexport const interaction = () => {\n  log.deprecate({\n    pkg: \"FCL/SDK\",\n    message: `The interaction been deprecated from the Flow JS-SDK/FCL. use initInteraction instead`,\n    transition:\n      \"https://github.com/onflow/flow-js-sdk/blob/master/packages/sdk/TRANSITIONS.md#0010-deprecate-interaction\",\n    level: LEVELS.warn,\n  })\n  return initInteraction()\n}\n\nexport const isNumber = (d: any): d is number => typeof d === \"number\"\nexport const isArray = (d: any): d is any[] => Array.isArray(d)\nexport const isObj = (d: any): d is Record<string, any> =>\n  d !== null && typeof d === \"object\"\nexport const isNull = (d: any): d is null => d == null\nexport const isFn = (d: any): d is Function => typeof d === \"function\"\n\nexport const isInteraction = (ix: unknown) => {\n  if (!isObj(ix) || isNull(ix) || isNumber(ix)) return false\n  for (let key of KEYS) if (!ix.hasOwnProperty(key)) return false\n  return true\n}\n\nexport const Ok = (ix: Interaction) => {\n  ix.status = InteractionStatus.OK\n  return ix\n}\n\nexport const Bad = (ix: Interaction, reason: string) => {\n  ix.status = InteractionStatus.BAD\n  ix.reason = reason\n  return ix\n}\n\nconst makeIx = (wat: InteractionTag) => (ix: Interaction) => {\n  ix.tag = wat\n  return Ok(ix)\n}\n\nconst prepAccountKeyId = (\n  acct: Partial<InteractionAccount> | AccountFn\n): Partial<InteractionAccount> | AccountFn => {\n  if (acct.keyId == null) return acct\n\n  invariant(\n    !isNaN(parseInt(acct.keyId.toString())),\n    \"account.keyId must be an integer\"\n  )\n\n  return {\n    ...acct,\n    keyId: parseInt(acct.keyId.toString()),\n  } as InteractionAccount | AccountFn\n}\n\ninterface IPrepAccountOpts {\n  role?: TransactionRole | null\n}\n\nexport const initAccount = (): InteractionAccount => JSON.parse(ACCT)\n\nexport const prepAccount =\n  (acct: InteractionAccount | AccountFn, opts: IPrepAccountOpts = {}) =>\n  (ix: Interaction) => {\n    invariant(\n      typeof acct === \"function\" || typeof acct === \"object\",\n      \"prepAccount must be passed an authorization function or an account object\"\n    )\n    invariant(opts.role != null, \"Account must have a role\")\n\n    const ACCOUNT = initAccount()\n    const role = opts.role\n    const tempId = uuidv4()\n    let account: Partial<InteractionAccount> = {...acct}\n\n    if (acct.authorization && isFn(acct.authorization))\n      account = {resolve: acct.authorization}\n    if (!acct.authorization && isFn(acct)) account = {resolve: acct}\n\n    const resolve = account.resolve\n    if (resolve) {\n      account.resolve = (acct: InteractionAccount, ...rest: any[]) =>\n        [resolve, prepAccountKeyId].reduce(\n          async (d, fn) => fn(await d, ...rest),\n          acct\n        )\n    }\n    account = prepAccountKeyId(account)\n\n    ix.accounts[tempId] = {\n      ...ACCOUNT,\n      tempId,\n      ...account,\n      role: {\n        ...ACCOUNT.role,\n        ...(typeof acct.role === \"object\" ? acct.role : {}),\n        ...(role ? {[role]: true} : {}),\n      },\n    }\n\n    if (role === TransactionRole.AUTHORIZER) {\n      ix.authorizations.push(tempId)\n    } else if (role === TransactionRole.PAYER) {\n      ix.payer.push(tempId)\n    } else if (role) {\n      ix[role] = tempId\n    }\n\n    return ix\n  }\n\nexport const makeArgument = (arg: Record<string, any>) => (ix: Interaction) => {\n  let tempId = uuidv4()\n  ix.message.arguments.push(tempId)\n\n  ix.arguments[tempId] = JSON.parse(ARG)\n  ix.arguments[tempId].tempId = tempId\n  ix.arguments[tempId].value = arg.value\n  ix.arguments[tempId].asArgument = arg.asArgument\n  ix.arguments[tempId].xform = arg.xform\n  ix.arguments[tempId].resolve = arg.resolve\n  ix.arguments[tempId].resolveArgument = isFn(arg.resolveArgument)\n    ? arg.resolveArgument.bind(arg)\n    : arg.resolveArgument\n\n  return Ok(ix)\n}\n\nexport const makeUnknown /*                 */ = makeIx(InteractionTag.UNKNOWN)\nexport const makeScript /*                  */ = makeIx(InteractionTag.SCRIPT)\nexport const makeTransaction /*             */ = makeIx(\n  InteractionTag.TRANSACTION\n)\nexport const makeGetTransactionStatus /*    */ = makeIx(\n  InteractionTag.GET_TRANSACTION_STATUS\n)\nexport const makeGetTransaction /*          */ = makeIx(\n  InteractionTag.GET_TRANSACTION\n)\nexport const makeGetAccount /*              */ = makeIx(\n  InteractionTag.GET_ACCOUNT\n)\nexport const makeGetEvents /*               */ = makeIx(\n  InteractionTag.GET_EVENTS\n)\nexport const makePing /*                    */ = makeIx(InteractionTag.PING)\nexport const makeGetBlock /*                */ = makeIx(\n  InteractionTag.GET_BLOCK\n)\nexport const makeGetBlockHeader /*          */ = makeIx(\n  InteractionTag.GET_BLOCK_HEADER\n)\nexport const makeGetCollection /*           */ = makeIx(\n  InteractionTag.GET_COLLECTION\n)\nexport const makeGetNetworkParameters /*    */ = makeIx(\n  InteractionTag.GET_NETWORK_PARAMETERS\n)\nexport const makeSubscribeEvents /*         */ = makeIx(\n  InteractionTag.SUBSCRIBE_EVENTS\n)\nexport const makeGetNodeVerionInfo /*       */ = makeIx(\n  InteractionTag.GET_NODE_VERSION_INFO\n)\n\nconst is = (wat: InteractionTag) => (ix: Interaction) => ix.tag === wat\n\nexport const isUnknown /*                 */ = is(InteractionTag.UNKNOWN)\nexport const isScript /*                  */ = is(InteractionTag.SCRIPT)\nexport const isTransaction /*             */ = is(InteractionTag.TRANSACTION)\nexport const isGetTransactionStatus /*    */ = is(\n  InteractionTag.GET_TRANSACTION_STATUS\n)\nexport const isGetTransaction /*          */ = is(\n  InteractionTag.GET_TRANSACTION\n)\nexport const isGetAccount /*              */ = is(InteractionTag.GET_ACCOUNT)\nexport const isGetEvents /*               */ = is(InteractionTag.GET_EVENTS)\nexport const isPing /*                    */ = is(InteractionTag.PING)\nexport const isGetBlock /*                */ = is(InteractionTag.GET_BLOCK)\nexport const isGetBlockHeader /*          */ = is(\n  InteractionTag.GET_BLOCK_HEADER\n)\nexport const isGetCollection /*           */ = is(InteractionTag.GET_COLLECTION)\nexport const isGetNetworkParameters /*    */ = is(\n  InteractionTag.GET_NETWORK_PARAMETERS\n)\nexport const isGetNodeVersionInfo /*      */ = is(\n  InteractionTag.GET_NODE_VERSION_INFO\n)\nexport const isSubscribeEvents /*         */ = is(\n  InteractionTag.SUBSCRIBE_EVENTS\n)\n\nexport const isOk /*  */ = (ix: Interaction) =>\n  ix.status === InteractionStatus.OK\nexport const isBad /* */ = (ix: Interaction) =>\n  ix.status === InteractionStatus.BAD\nexport const why /*   */ = (ix: Interaction) => ix.reason\n\nexport const isAccount /*  */ = (account: Record<string, any>) =>\n  account.kind === InteractionResolverKind.ACCOUNT\nexport const isArgument /* */ = (argument: Record<string, any>) =>\n  argument.kind === InteractionResolverKind.ARGUMENT\n\nconst hardMode = (ix: Interaction) => {\n  for (let key of Object.keys(ix)) {\n    if (!KEYS.has(key))\n      throw new Error(`\"${key}\" is an invalid root level Interaction property.`)\n  }\n  return ix\n}\n\ntype MaybePromise<T> = T | Promise<T>\n\nconst recPipe = async (\n  ix: MaybePromise<Interaction>,\n  fns: (\n    | ((x: Interaction) => MaybePromise<Interaction>)\n    | MaybePromise<Interaction>\n  )[] = []\n): Promise<Interaction> => {\n  try {\n    ix = hardMode(await ix)\n    if (isBad(ix)) throw new Error(`Interaction Error: ${ix.reason}`)\n    if (!fns.length) return ix\n    const [hd, ...rest] = fns\n    const cur = await hd\n    if (isFn(cur)) return recPipe(cur(ix), rest)\n    if (isNull(cur) || !cur) return recPipe(ix, rest)\n    if (isInteraction(cur)) return recPipe(cur, rest)\n    throw new Error(\"Invalid Interaction Composition\")\n  } catch (e) {\n    throw e\n  }\n}\n\n/**\n * @description Async pipe function to compose interactions\n * @returns An interaction object\n */\nfunction pipe(\n  fns: ((x: Interaction) => Interaction)[]\n): (x: Interaction) => Promise<Interaction>\n/**\n * @description Async pipe function to compose interactions\n * @returns An interaction object\n */\nfunction pipe(\n  ix: MaybePromise<Interaction>,\n  fns: ((x: Interaction) => Interaction)[]\n): Promise<Interaction>\nfunction pipe(\n  ...args:\n    | [((x: Interaction) => Interaction)[]]\n    | [MaybePromise<Interaction>, ((x: Interaction) => Interaction)[]]\n): Promise<Interaction> | ((x: Interaction) => Promise<Interaction>) {\n  const [arg1, arg2] = args\n  if (isArray(arg1)) return (d: Interaction) => pipe(d, arg1)\n\n  const ix = arg1 as MaybePromise<Interaction>\n  const fns = arg2 as ((x: Interaction) => Interaction)[]\n  return recPipe(ix, fns)\n}\nexport {pipe}\n\nconst identity = <T>(v: T, ..._: any[]) => v\n\nexport const get = (ix: Interaction, key: string, fallback: any) => {\n  return ix.assigns[key] == null ? fallback : ix.assigns[key]\n}\n\nexport const put = (key: string, value: any) => (ix: Interaction) => {\n  ix.assigns[key] = value\n  return Ok(ix)\n}\n\nexport const update =\n  (key: string, fn = identity) =>\n  (ix: Interaction) => {\n    ix.assigns[key] = fn(ix.assigns[key], ix)\n    return Ok(ix)\n  }\n\nexport const destroy = (key: string) => (ix: Interaction) => {\n  delete ix.assigns[key]\n  return Ok(ix)\n}\n","import {pipe, initInteraction} from \"../interaction/interaction\"\n\nexport function build(fns = []) {\n  return pipe(initInteraction(), fns)\n}\n","const DEFAULT_RESPONSE = {\n  tag: null,\n  transaction: null,\n  transactionStatus: null,\n  transactionId: null,\n  encodedData: null,\n  events: null,\n  account: null,\n  block: null,\n  blockHeader: null,\n  latestBlock: null,\n  collection: null,\n  networkParameters: null,\n  streamConnection: null,\n  heartbeat: null,\n  nodeVersionInfo: null,\n}\n\nexport const response = () => ({...DEFAULT_RESPONSE})\n","import {pipe, Ok, makeGetBlock} from \"../interaction/interaction\"\n\n/**\n * @description - A builder function that returns the interaction to get the latest block\n * @param {boolean} [isSealed] - Whether or not the block should be sealed\n * @returns {Function} - An interaction object\n */\nexport function getBlock(isSealed = null) {\n  return pipe([\n    makeGetBlock,\n    ix => {\n      ix.block.isSealed = isSealed\n      return Ok(ix)\n    },\n  ])\n}\n","import {pipe, makeGetAccount, Ok} from \"../interaction/interaction\"\nimport {sansPrefix} from \"@onflow/util-address\"\n\n/**\n * @description - A builder function that returns the interaction to get an account by address\n * @param {string} addr - The address of the account to getq\n * @returns {Function} - An interaction object\n */\nexport function getAccount(addr) {\n  return pipe([\n    makeGetAccount,\n    ix => {\n      ix.account.addr = sansPrefix(addr)\n      return Ok(ix)\n    },\n  ])\n}\n","import EventEmitter from \"events\"\nimport {StreamConnection} from \"@onflow/typedefs\"\n\ntype DecodeResponseFn = (\n  response: Record<string, any>,\n  customDecoders?: Record<string, any>\n) => Promise<any>\n\n/**\n * Pipes a generic stream of data into a granular stream of decoded data\n * The data is decoded per channel and emitted in order\n */\nexport const decodeStream = (\n  stream: StreamConnection<{data: any}>,\n  decodeResponse: DecodeResponseFn,\n  customDecoders?: Record<string, any>\n): StreamConnection<any> => {\n  const newStream = new EventEmitter()\n  let queue = taskQueue()\n\n  // Data is separated by topic & the decoded data is emitted in order\n  // All topics for a given message will be emitted synchronously before moving on to the next message\n  // The streamReady promise ensures that the data is emitted in order and avoids race conditions when decoding\n  stream.on(\"data\", async data => {\n    const topics = Object.keys(data).filter(\n      key => data[key] != null && key !== \"tag\"\n    )\n\n    let newDataPromise = Promise.all(\n      topics.map(async channel => {\n        const partialResponse = {\n          [channel]: data[channel],\n        }\n        const message = await decodeResponse(partialResponse, customDecoders)\n        return {\n          channel,\n          message,\n        }\n      })\n    )\n\n    queue.push(async () => {\n      // Emit the new data\n      const newData = await newDataPromise\n      newData.forEach(({channel, message}) => {\n        newStream.emit(channel, message)\n      })\n    })\n  })\n\n  // Relay events from the original stream\n  // These events are delivered in order as well so that the stream will\n  // not emit more data after it has announced a contradictory state\n  function relayEvent(event: any) {\n    stream.on(event, (message: any) => {\n      queue.push(async () => {\n        newStream.emit(event, message)\n      })\n    })\n  }\n  relayEvent(\"close\")\n  relayEvent(\"error\")\n\n  return {\n    on(channel: string, callback: any) {\n      newStream.on(channel, callback)\n      return this\n    },\n    off(channel: string, callback: any) {\n      newStream.off(channel, callback)\n      return this\n    },\n    close: () => {\n      stream.close()\n    },\n  }\n}\n\nfunction taskQueue() {\n  let queue: (() => Promise<any>)[] = [] as any as (() => Promise<any>)[]\n  let running = false\n\n  async function run() {\n    if (running) return\n    running = true\n    while (queue.length > 0) {\n      const task = queue.shift()\n      await task?.()\n    }\n    running = false\n  }\n\n  return {\n    push: (task: () => Promise<any>) => {\n      queue.push(task)\n      run()\n    },\n  }\n}\n","import {log} from \"@onflow/util-logger\"\nimport {decodeStream} from \"./decode-stream\"\n\nconst latestBlockDeprecationNotice = () => {\n  log.deprecate({\n    pkg: \"@onflow/decode\",\n    subject:\n      \"Operating upon data of the latestBlock field of the response object\",\n    transition:\n      \"https://github.com/onflow/flow-js-sdk/blob/master/packages/decode/WARNINGS.md#0001-Deprecating-latestBlock-field\",\n  })\n}\n\nconst decodeNumber = async (num, _, stack) => {\n  try {\n    return Number(num)\n  } catch (e) {\n    throw new Error(`Decode Number Error : ${stack.join(\".\")}`)\n  }\n}\n\nconst decodeImplicit = async i => i\n\nconst decodeVoid = async () => null\n\nconst decodeType = async type => {\n  return type.staticType\n}\n\nconst decodeOptional = async (optional, decoders, stack) =>\n  optional ? await recurseDecode(optional, decoders, stack) : null\n\nconst decodeArray = async (array, decoders, stack) =>\n  await Promise.all(\n    array.map(\n      v =>\n        new Promise(async res =>\n          res(await recurseDecode(v, decoders, [...stack, v.type]))\n        )\n    )\n  )\n\nconst decodeDictionary = async (dictionary, decoders, stack) =>\n  await dictionary.reduce(async (acc, v) => {\n    acc = await acc\n    acc[await recurseDecode(v.key, decoders, [...stack, v.key])] =\n      await recurseDecode(v.value, decoders, [...stack, v.key])\n    return acc\n  }, Promise.resolve({}))\n\nconst decodeComposite = async (composite, decoders, stack) => {\n  const decoded = await composite.fields.reduce(async (acc, v) => {\n    acc = await acc\n    acc[v.name] = await recurseDecode(v.value, decoders, [...stack, v.name])\n    return acc\n  }, Promise.resolve({}))\n  const decoder = composite.id && decoderLookup(decoders, composite.id)\n  return decoder ? await decoder(decoded) : decoded\n}\n\nconst decodeInclusiveRange = async (range, decoders, stack) => {\n  // Recursive decode for start, end, and step\n  // We don't do all fields just in case there are future API changes\n  // where fields added and are not Cadence values\n  const keys = [\"start\", \"end\", \"step\"]\n  const decoded = await Object.keys(range).reduce(async (acc, key) => {\n    acc = await acc\n    if (keys.includes(key)) {\n      acc[key] = await recurseDecode(range[key], decoders, [...stack, key])\n    }\n    return acc\n  }, Promise.resolve({}))\n  return decoded\n}\n\nconst defaultDecoders = {\n  UInt: decodeImplicit,\n  Int: decodeImplicit,\n  UInt8: decodeImplicit,\n  Int8: decodeImplicit,\n  UInt16: decodeImplicit,\n  Int16: decodeImplicit,\n  UInt32: decodeImplicit,\n  Int32: decodeImplicit,\n  UInt64: decodeImplicit,\n  Int64: decodeImplicit,\n  UInt128: decodeImplicit,\n  Int128: decodeImplicit,\n  UInt256: decodeImplicit,\n  Int256: decodeImplicit,\n  Word8: decodeImplicit,\n  Word16: decodeImplicit,\n  Word32: decodeImplicit,\n  Word64: decodeImplicit,\n  Word128: decodeImplicit,\n  Word256: decodeImplicit,\n  UFix64: decodeImplicit,\n  Fix64: decodeImplicit,\n  String: decodeImplicit,\n  Character: decodeImplicit,\n  Bool: decodeImplicit,\n  Address: decodeImplicit,\n  Void: decodeVoid,\n  Optional: decodeOptional,\n  Reference: decodeImplicit,\n  Array: decodeArray,\n  Dictionary: decodeDictionary,\n  Event: decodeComposite,\n  Resource: decodeComposite,\n  Struct: decodeComposite,\n  Enum: decodeComposite,\n  Type: decodeType,\n  Path: decodeImplicit,\n  Capability: decodeImplicit,\n  InclusiveRange: decodeInclusiveRange,\n}\n\nconst decoderLookup = (decoders, lookup) => {\n  const found = Object.keys(decoders).find(decoder => {\n    if (/^\\/.*\\/$/.test(decoder)) {\n      const reg = new RegExp(decoder.substring(1, decoder.length - 1))\n      return reg.test(lookup)\n    }\n    return decoder === lookup\n  })\n  return lookup && found && decoders[found]\n}\n\nconst recurseDecode = async (decodeInstructions, decoders, stack) => {\n  let decoder = decoderLookup(decoders, decodeInstructions.type)\n  if (!decoder)\n    throw new Error(\n      `Undefined Decoder Error: ${decodeInstructions.type}@${stack.join(\".\")}`\n    )\n  return await decoder(decodeInstructions.value, decoders, stack)\n}\n\n/**\n * @description - Decodes a response from Flow into JSON\n * @param {*} decodeInstructions - The response object from Flow\n * @param {object} customDecoders - An object of custom decoders\n * @param {Array<*>} stack - The stack of the current decoding\n * @returns {Promise<*>} - The decoded response\n */\nexport const decode = async (\n  decodeInstructions,\n  customDecoders = {},\n  stack = []\n) => {\n  // Filter out all default decoders which are overridden by a custom decoder regex\n  const filteredDecoders = Object.keys(defaultDecoders)\n    .filter(\n      decoder =>\n        !Object.keys(customDecoders).find(customDecoder =>\n          new RegExp(customDecoder).test(decoder)\n        )\n    )\n    .reduce((decoders, decoderKey) => {\n      decoders[decoderKey] = defaultDecoders[decoderKey]\n      return decoders\n    }, customDecoders)\n\n  const decoders = {\n    ...filteredDecoders,\n    ...customDecoders,\n  }\n  return recurseDecode(decodeInstructions, decoders, stack)\n}\n\nexport const decodeResponse = async (response, customDecoders = {}) => {\n  if (response.encodedData) {\n    return decode(response.encodedData, customDecoders)\n  } else if (response.transactionStatus) {\n    return {\n      ...response.transactionStatus,\n      events: await Promise.all(\n        response.transactionStatus.events.map(async function decodeEvents(e) {\n          return {\n            type: e.type,\n            transactionId: e.transactionId,\n            transactionIndex: e.transactionIndex,\n            eventIndex: e.eventIndex,\n            data: await decode(e.payload, customDecoders),\n          }\n        })\n      ),\n    }\n  } else if (response.transaction) {\n    return response.transaction\n  } else if (response.events) {\n    return await Promise.all(\n      response.events.map(async function decodeEvents(e) {\n        return {\n          blockId: e.blockId,\n          blockHeight: e.blockHeight,\n          blockTimestamp: e.blockTimestamp,\n          type: e.type,\n          transactionId: e.transactionId,\n          transactionIndex: e.transactionIndex,\n          eventIndex: e.eventIndex,\n          data: await decode(e.payload, customDecoders),\n        }\n      })\n    )\n  } else if (response.account) {\n    return response.account\n  } else if (response.block) {\n    return response.block\n  } else if (response.blockHeader) {\n    return response.blockHeader\n  } else if (response.latestBlock) {\n    latestBlockDeprecationNotice()\n    return response.latestBlock\n  } else if (response.transactionId) {\n    return response.transactionId\n  } else if (response.collection) {\n    return response.collection\n  } else if (response.networkParameters) {\n    const prefixRegex = /^flow-/\n    const rawChainId = response.networkParameters.chainId\n    let formattedChainId\n\n    if (rawChainId === \"flow-emulator\") {\n      formattedChainId = \"local\"\n    } else if (prefixRegex.test(rawChainId)) {\n      formattedChainId = rawChainId.replace(prefixRegex, \"\")\n    } else {\n      formattedChainId = rawChainId\n    }\n\n    return {\n      chainId: formattedChainId,\n    }\n  } else if (response.streamConnection) {\n    return decodeStream(\n      response.streamConnection,\n      decodeResponse,\n      customDecoders\n    )\n  } else if (response.heartbeat) {\n    return response.heartbeat\n  } else if (response.nodeVersionInfo) {\n    return response.nodeVersionInfo\n  }\n\n  return null\n}\n","import {isTransaction, isScript, get} from \"../interaction/interaction\"\nimport {invariant} from \"@onflow/util-invariant\"\nimport {config} from \"@onflow/config\"\nimport * as logger from \"@onflow/util-logger\"\nimport {withPrefix} from \"@onflow/util-address\"\n\nconst isFn = v => typeof v === \"function\"\nconst isString = v => typeof v === \"string\"\n\nconst oldIdentifierPatternFn = () => /\\b(0x\\w+)\\b/g\nfunction isOldIdentifierSyntax(cadence) {\n  return oldIdentifierPatternFn().test(cadence)\n}\n\nconst newIdentifierPatternFn = () => /import\\s+\"(\\w+)\"/g\nfunction isNewIdentifierSyntax(cadence) {\n  return newIdentifierPatternFn().test(cadence)\n}\n\nfunction getContractIdentifierSyntaxMatches(cadence) {\n  return cadence.matchAll(newIdentifierPatternFn())\n}\n\nexport async function resolveCadence(ix) {\n  if (!isTransaction(ix) && !isScript(ix)) return ix\n\n  var cadence = get(ix, \"ix.cadence\")\n\n  invariant(\n    isFn(cadence) || isString(cadence),\n    \"Cadence needs to be a function or a string.\"\n  )\n  if (isFn(cadence)) cadence = await cadence({})\n  invariant(isString(cadence), \"Cadence needs to be a string at this point.\")\n  invariant(\n    !isOldIdentifierSyntax(cadence) || !isNewIdentifierSyntax(cadence),\n    \"Both account identifier and contract identifier syntax not simultaneously supported.\"\n  )\n  if (isOldIdentifierSyntax(cadence)) {\n    cadence = await config()\n      .where(/^0x/)\n      .then(d =>\n        Object.entries(d).reduce((cadence, [key, value]) => {\n          const regex = new RegExp(\"(\\\\b\" + key + \"\\\\b)\", \"g\")\n          return cadence.replace(regex, value)\n        }, cadence)\n      )\n  }\n\n  if (isNewIdentifierSyntax(cadence)) {\n    for (const [fullMatch, contractName] of getContractIdentifierSyntaxMatches(\n      cadence\n    )) {\n      const address = await config().get(`system.contracts.${contractName}`)\n      if (address) {\n        cadence = cadence.replace(\n          fullMatch,\n          `import ${contractName} from ${withPrefix(address)}`\n        )\n      } else {\n        logger.log({\n          title: \"Contract Placeholder not found\",\n          message: `Cannot find a value for contract placeholder ${contractName}. Please add to your flow.json or explicitly add it to the config 'contracts.*' namespace.`,\n          level: logger.LEVELS.warn,\n        })\n      }\n    }\n  }\n\n  // We need to move this over in any case.\n  ix.message.cadence = cadence\n\n  return ix\n}\n","import {invariant} from \"@onflow/util-invariant\"\nimport {isTransaction, isScript} from \"../interaction/interaction\"\n\nconst isFn = v => typeof v === \"function\"\n\nfunction cast(arg) {\n  // prettier-ignore\n  invariant(typeof arg.xform != null, `No type specified for argument: ${arg.value}`)\n\n  if (isFn(arg.xform)) return arg.xform(arg.value)\n  if (isFn(arg.xform.asArgument)) return arg.xform.asArgument(arg.value)\n\n  // prettier-ignore\n  invariant(false, `Invalid Argument`, arg)\n}\n\nasync function handleArgResolution(arg, depth = 3) {\n  invariant(\n    depth > 0,\n    `Argument Resolve Recursion Limit Exceeded for Arg: ${arg.tempId}`\n  )\n\n  if (isFn(arg.resolveArgument)) {\n    const resolvedArg = await arg.resolveArgument()\n    return handleArgResolution(resolvedArg, depth - 1)\n  } else {\n    return arg\n  }\n}\n\nexport async function resolveArguments(ix) {\n  if (isTransaction(ix) || isScript(ix)) {\n    for (let [id, arg] of Object.entries(ix.arguments)) {\n      const res = await handleArgResolution(arg)\n      ix.arguments[id].asArgument = cast(res)\n    }\n  }\n\n  return ix\n}\n","import {SHA3} from \"sha3\"\nimport {encode, Buffer, EncodeInput} from \"@onflow/rlp\"\nimport {sansPrefix} from \"@onflow/util-address\"\n\nexport const encodeTransactionPayload = (tx: Transaction) =>\n  prependTransactionDomainTag(rlpEncode(preparePayload(tx)))\nexport const encodeTransactionEnvelope = (tx: Transaction) =>\n  prependTransactionDomainTag(rlpEncode(prepareEnvelope(tx)))\nexport const encodeTxIdFromVoucher = (voucher: Voucher) =>\n  sha3_256(rlpEncode(prepareVoucher(voucher)))\n\nconst rightPaddedHexBuffer = (value: string, pad: number) =>\n  Buffer.from(value.padEnd(pad * 2, \"0\"), \"hex\")\n\nconst leftPaddedHexBuffer = (value: string, pad: number) =>\n  Buffer.from(value.padStart(pad * 2, \"0\"), \"hex\")\n\nconst TRANSACTION_DOMAIN_TAG = rightPaddedHexBuffer(\n  Buffer.from(\"FLOW-V0.0-transaction\").toString(\"hex\"),\n  32\n).toString(\"hex\")\nconst prependTransactionDomainTag = (tx: string) => TRANSACTION_DOMAIN_TAG + tx\n\nconst addressBuffer = (addr: string) => leftPaddedHexBuffer(addr, 8)\n\nconst blockBuffer = (block: string) => leftPaddedHexBuffer(block, 32)\n\nconst argumentToString = (arg: Record<string, any>) =>\n  Buffer.from(JSON.stringify(arg), \"utf8\")\n\nconst scriptBuffer = (script: string) => Buffer.from(script, \"utf8\")\nconst signatureBuffer = (signature: string) => Buffer.from(signature, \"hex\")\n\nconst rlpEncode = (v: EncodeInput) => {\n  return encode(v).toString(\"hex\")\n}\n\nconst sha3_256 = (msg: string) => {\n  const sha = new SHA3(256)\n  sha.update(Buffer.from(msg, \"hex\"))\n  return sha.digest().toString(\"hex\")\n}\n\nconst preparePayload = (tx: Transaction) => {\n  validatePayload(tx)\n\n  return [\n    scriptBuffer(tx.cadence || \"\"),\n    tx.arguments.map(argumentToString),\n    blockBuffer(tx.refBlock || \"\"),\n    tx.computeLimit,\n    addressBuffer(sansPrefix(tx.proposalKey.address || \"\")),\n    tx.proposalKey.keyId,\n    tx.proposalKey.sequenceNum,\n    addressBuffer(sansPrefix(tx.payer)),\n    tx.authorizers.map(authorizer => addressBuffer(sansPrefix(authorizer))),\n  ]\n}\n\nconst prepareEnvelope = (tx: Transaction) => {\n  validateEnvelope(tx)\n\n  return [preparePayload(tx), preparePayloadSignatures(tx)]\n}\n\nconst preparePayloadSignatures = (tx: Transaction) => {\n  const signers = collectSigners(tx)\n\n  return tx.payloadSigs\n    ?.map((sig: Sig) => {\n      return {\n        signerIndex: signers.get(sig.address) || \"\",\n        keyId: sig.keyId,\n        sig: sig.sig,\n      }\n    })\n    .sort((a, b) => {\n      if (a.signerIndex > b.signerIndex) return 1\n      if (a.signerIndex < b.signerIndex) return -1\n\n      if (a.keyId > b.keyId) return 1\n      if (a.keyId < b.keyId) return -1\n\n      return 0\n    })\n    .map(sig => {\n      return [sig.signerIndex, sig.keyId, signatureBuffer(sig.sig)]\n    })\n}\n\nconst collectSigners = (tx: Voucher | Transaction) => {\n  const signers = new Map<string, number>()\n  let i = 0\n\n  const addSigner = (addr: string) => {\n    if (!signers.has(addr)) {\n      signers.set(addr, i)\n      i++\n    }\n  }\n\n  if (tx.proposalKey.address) {\n    addSigner(tx.proposalKey.address)\n  }\n  addSigner(tx.payer)\n  tx.authorizers.forEach(addSigner)\n\n  return signers\n}\n\nconst prepareVoucher = (voucher: Voucher) => {\n  validateVoucher(voucher)\n\n  const signers = collectSigners(voucher)\n\n  const prepareSigs = (sigs: Sig[]) => {\n    return sigs\n      .map(({address, keyId, sig}) => {\n        return {signerIndex: signers.get(address) || \"\", keyId, sig}\n      })\n      .sort((a, b) => {\n        if (a.signerIndex > b.signerIndex) return 1\n        if (a.signerIndex < b.signerIndex) return -1\n        if (a.keyId > b.keyId) return 1\n        if (a.keyId < b.keyId) return -1\n\n        return 0\n      })\n      .map(sig => {\n        return [sig.signerIndex, sig.keyId, signatureBuffer(sig.sig)]\n      })\n  }\n\n  return [\n    [\n      scriptBuffer(voucher.cadence),\n      voucher.arguments.map(argumentToString),\n      blockBuffer(voucher.refBlock),\n      voucher.computeLimit,\n      addressBuffer(sansPrefix(voucher.proposalKey.address)),\n      voucher.proposalKey.keyId,\n      voucher.proposalKey.sequenceNum,\n      addressBuffer(sansPrefix(voucher.payer)),\n      voucher.authorizers.map(authorizer =>\n        addressBuffer(sansPrefix(authorizer))\n      ),\n    ],\n    prepareSigs(voucher.payloadSigs),\n    prepareSigs(voucher.envelopeSigs),\n  ]\n}\n\nconst validatePayload = (tx: Transaction) => {\n  payloadFields.forEach(field => checkField(tx, field))\n  proposalKeyFields.forEach(field =>\n    checkField(tx.proposalKey, field, \"proposalKey\")\n  )\n}\n\nconst validateEnvelope = (tx: Transaction) => {\n  payloadSigsFields.forEach(field => checkField(tx, field))\n  tx.payloadSigs?.forEach((sig, index) => {\n    payloadSigFields.forEach(field =>\n      checkField(sig, field, \"payloadSigs\", index)\n    )\n  })\n}\n\nconst validateVoucher = (voucher: Voucher) => {\n  payloadFields.forEach(field => checkField(voucher, field))\n  proposalKeyFields.forEach(field =>\n    checkField(voucher.proposalKey, field, \"proposalKey\")\n  )\n  payloadSigsFields.forEach(field => checkField(voucher, field))\n  voucher.payloadSigs.forEach((sig, index) => {\n    payloadSigFields.forEach(field =>\n      checkField(sig, field, \"payloadSigs\", index)\n    )\n  })\n  envelopeSigsFields.forEach(field => checkField(voucher, field))\n  voucher.envelopeSigs.forEach((sig, index) => {\n    envelopeSigFields.forEach(field =>\n      checkField(sig, field, \"envelopeSigs\", index)\n    )\n  })\n}\n\nconst isNumber = (v: any): v is number => typeof v === \"number\"\nconst isString = (v: any): v is string => typeof v === \"string\"\nconst isObject = (v: any) => v !== null && typeof v === \"object\"\nconst isArray = (v: any) => isObject(v) && v instanceof Array\n\ninterface VoucherArgument {\n  type: string\n  value: string\n}\n\ninterface VoucherProposalKey {\n  address: string\n  keyId: number | null\n  sequenceNum: number | null\n}\n\ninterface Sig {\n  address: string\n  keyId: number | string\n  sig: string\n}\n\nexport interface TransactionProposalKey {\n  address?: string\n  keyId?: number | string\n  sequenceNum?: number\n}\nexport interface Transaction {\n  cadence: string | null\n  refBlock: string | null\n  computeLimit: string | null\n  arguments: VoucherArgument[]\n  proposalKey: TransactionProposalKey\n  payer: string\n  authorizers: string[]\n  payloadSigs?: Sig[]\n  envelopeSigs?: TransactionProposalKey[]\n}\n\nexport interface Voucher {\n  cadence: string\n  refBlock: string\n  computeLimit: number\n  arguments: VoucherArgument[]\n  proposalKey: VoucherProposalKey\n  payer: string\n  authorizers: string[]\n  payloadSigs: Sig[]\n  envelopeSigs: Sig[]\n}\n\ninterface PayloadField {\n  name: string\n  check: (v: any) => boolean\n  defaultVal?: string\n}\n\nconst payloadFields: PayloadField[] = [\n  {name: \"cadence\", check: isString},\n  {name: \"arguments\", check: isArray},\n  {name: \"refBlock\", check: isString, defaultVal: \"0\"},\n  {name: \"computeLimit\", check: isNumber},\n  {name: \"proposalKey\", check: isObject},\n  {name: \"payer\", check: isString},\n  {name: \"authorizers\", check: isArray},\n]\n\nconst proposalKeyFields: PayloadField[] = [\n  {name: \"address\", check: isString},\n  {name: \"keyId\", check: isNumber},\n  {name: \"sequenceNum\", check: isNumber},\n]\n\nconst payloadSigsFields: PayloadField[] = [\n  {name: \"payloadSigs\", check: isArray},\n]\n\nconst payloadSigFields: PayloadField[] = [\n  {name: \"address\", check: isString},\n  {name: \"keyId\", check: isNumber},\n  {name: \"sig\", check: isString},\n]\n\nconst envelopeSigsFields: PayloadField[] = [\n  {name: \"envelopeSigs\", check: isArray},\n]\n\nconst envelopeSigFields: PayloadField[] = [\n  {name: \"address\", check: isString},\n  {name: \"keyId\", check: isNumber},\n  {name: \"sig\", check: isString},\n]\n\nconst checkField = (\n  obj: Record<string, any>,\n  field: PayloadField,\n  base?: string,\n  index?: number\n) => {\n  const {name, check, defaultVal} = field\n  if (obj[name] == null && defaultVal != null) obj[name] = defaultVal\n  if (obj[name] == null) throw missingFieldError(name, base, index)\n  if (!check(obj[name])) throw invalidFieldError(name, base, index)\n}\n\nconst printFieldName = (field: string, base?: string, index?: number) => {\n  if (!!base)\n    return index == null ? `${base}.${field}` : `${base}.${index}.${field}`\n  return field\n}\n\nconst missingFieldError = (field: string, base?: string, index?: number) =>\n  new Error(`Missing field ${printFieldName(field, base, index)}`)\nconst invalidFieldError = (field: string, base?: string, index?: number) =>\n  new Error(`Invalid field ${printFieldName(field, base, index)}`)\n","import {withPrefix} from \"@onflow/util-address\"\nimport {Voucher, encodeTxIdFromVoucher} from \"../encode/encode\"\nimport {Interaction} from \"@onflow/typedefs\"\n\nexport function findInsideSigners(ix: Interaction) {\n  // Inside Signers Are: (authorizers + proposer) - payer\n  let inside = new Set(ix.authorizations)\n  if (ix.proposer) {\n    inside.add(ix.proposer)\n  }\n  if (Array.isArray(ix.payer)) {\n    ix.payer.forEach(p => inside.delete(p))\n  } else {\n    inside.delete(ix.payer)\n  }\n  return Array.from(inside)\n}\n\nexport function findOutsideSigners(ix: Interaction) {\n  // Outside Signers Are: (payer)\n  let outside = new Set(Array.isArray(ix.payer) ? ix.payer : [ix.payer])\n  return Array.from(outside)\n}\n\nexport const createSignableVoucher = (ix: Interaction) => {\n  const buildAuthorizers = () => {\n    const authorizations = ix.authorizations\n      .map(cid => withPrefix(ix.accounts[cid].addr))\n      .reduce((prev: (string | null)[], current) => {\n        return prev.find(item => item === current) ? prev : [...prev, current]\n      }, [])\n    return authorizations?.[0] ? authorizations : []\n  }\n\n  const buildInsideSigners = () =>\n    findInsideSigners(ix).map(id => ({\n      address: withPrefix(ix.accounts[id].addr),\n      keyId: ix.accounts[id].keyId,\n      sig: ix.accounts[id].signature,\n    }))\n\n  const buildOutsideSigners = () =>\n    findOutsideSigners(ix).map(id => ({\n      address: withPrefix(ix.accounts[id].addr),\n      keyId: ix.accounts[id].keyId,\n      sig: ix.accounts[id].signature,\n    }))\n\n  const proposalKey = ix.proposer\n    ? {\n        address: withPrefix(ix.accounts[ix.proposer].addr),\n        keyId: ix.accounts[ix.proposer].keyId,\n        sequenceNum: ix.accounts[ix.proposer].sequenceNum,\n      }\n    : {}\n\n  return {\n    cadence: ix.message.cadence,\n    refBlock: ix.message.refBlock || null,\n    computeLimit: ix.message.computeLimit,\n    arguments: ix.message.arguments.map(id => ix.arguments[id].asArgument),\n    proposalKey,\n    payer: withPrefix(\n      ix.accounts[Array.isArray(ix.payer) ? ix.payer[0] : ix.payer].addr\n    ),\n    authorizers: buildAuthorizers(),\n    payloadSigs: buildInsideSigners(),\n    envelopeSigs: buildOutsideSigners(),\n  }\n}\n\nexport const voucherToTxId = (voucher: Voucher) => {\n  return encodeTxIdFromVoucher(voucher)\n}\n","import {withPrefix} from \"@onflow/util-address\"\nimport {invariant} from \"@onflow/util-invariant\"\nimport {log} from \"@onflow/util-logger\"\nimport {isTransaction} from \"../interaction/interaction\"\nimport {Interaction, InteractionAccount} from \"@onflow/typedefs\"\nimport {createSignableVoucher} from \"./voucher\"\nimport {v4 as uuidv4} from \"uuid\"\n\nconst MAX_DEPTH_LIMIT = 5\n\nconst idof = (acct: InteractionAccount) =>\n  `${withPrefix(acct.addr)}-${acct.keyId}`\nconst isFn = (v: any): v is Function =>\n  v &&\n  (Object.prototype.toString.call(v) === \"[object Function]\" ||\n    \"function\" === typeof v ||\n    v instanceof Function)\n\nconst genAccountId = (...ids: (string | boolean | undefined)[]) => ids.join(\"-\")\n\nenum ROLES {\n  PAYER = \"payer\",\n  PROPOSER = \"proposer\",\n  AUTHORIZATIONS = \"authorizations\",\n}\n\nfunction debug() {\n  const SPACE = \" \"\n  const SPACE_COUNT_PER_INDENT = 4\n  const DEBUG_MESSAGE: string[] = []\n  return [\n    function (msg = \"\", indent = 0) {\n      DEBUG_MESSAGE.push(\n        Array(indent * SPACE_COUNT_PER_INDENT)\n          .fill(SPACE)\n          .join(\"-\") + msg\n      )\n    },\n    function () {\n      return DEBUG_MESSAGE.reduce((prev, curr) => prev + \"\\n\" + curr)\n    },\n  ]\n}\n\nfunction recurseFlatMap<T>(el: T, depthLimit = 3) {\n  if (depthLimit <= 0) return el\n  if (!Array.isArray(el)) return el\n  return recurseFlatMap(\n    el.flatMap(e => e),\n    depthLimit - 1\n  )\n}\n\nexport function buildPreSignable(\n  acct: Partial<InteractionAccount>,\n  ix: Interaction\n) {\n  try {\n    return {\n      f_type: \"PreSignable\",\n      f_vsn: \"1.0.1\",\n      roles: acct.role,\n      cadence: ix.message.cadence,\n      args: ix.message.arguments.map(d => ix.arguments[d].asArgument),\n      data: {},\n      interaction: ix,\n      voucher: createSignableVoucher(ix),\n    }\n  } catch (error) {\n    console.error(\"buildPreSignable\", error)\n    throw error\n  }\n}\n\nasync function removeUnusedIxAccounts(\n  ix: Interaction,\n  opts: Record<string, any>\n) {\n  const payerTempIds = Array.isArray(ix.payer) ? ix.payer : [ix.payer]\n  const authorizersTempIds = Array.isArray(ix.authorizations)\n    ? ix.authorizations\n    : [ix.authorizations]\n  const proposerTempIds =\n    ix.proposer === null\n      ? []\n      : Array.isArray(ix.proposer)\n        ? ix.proposer\n        : [ix.proposer]\n\n  const ixAccountKeys = Object.keys(ix.accounts)\n  const uniqueTempIds = [\n    ...new Set(payerTempIds.concat(authorizersTempIds, proposerTempIds)),\n  ]\n\n  for (const ixAccountKey of ixAccountKeys) {\n    if (!uniqueTempIds.find(id => id === ixAccountKey)) {\n      delete ix.accounts[ixAccountKey]\n    }\n  }\n}\n\nfunction addAccountToIx(ix: Interaction, newAccount: InteractionAccount) {\n  if (\n    typeof newAccount.addr === \"string\" &&\n    (typeof newAccount.keyId === \"number\" ||\n      typeof newAccount.keyId === \"string\")\n  ) {\n    newAccount.tempId = idof(newAccount)\n  } else {\n    newAccount.tempId = newAccount.tempId || uuidv4()\n  }\n\n  const existingAccount = ix.accounts[newAccount.tempId] || newAccount\n\n  if (!ix.accounts[newAccount.tempId]) {\n    ix.accounts[newAccount.tempId] = newAccount\n  }\n\n  ix.accounts[newAccount.tempId].role.proposer =\n    existingAccount.role.proposer || newAccount.role.proposer\n  ix.accounts[newAccount.tempId].role.payer =\n    existingAccount.role.payer || newAccount.role.payer\n  ix.accounts[newAccount.tempId].role.authorizer =\n    existingAccount.role.authorizer || newAccount.role.authorizer\n\n  return ix.accounts[newAccount.tempId]\n}\n\nfunction uniqueAccountsFlatMap(accounts: InteractionAccount[]) {\n  const flatMapped = recurseFlatMap(accounts)\n  const seen = new Set()\n\n  const uniqueAccountsFlatMapped = flatMapped\n    .map(account => {\n      const accountId = genAccountId(\n        account.tempId,\n        account.role.payer,\n        account.role.proposer,\n        account.role.authorizer,\n        account.role.param\n      )\n      if (seen.has(accountId)) return null\n      seen.add(accountId)\n      return account\n    })\n    .filter(e => e !== null) as InteractionAccount[]\n\n  return uniqueAccountsFlatMapped\n}\n\nasync function recurseResolveAccount(\n  ix: Interaction,\n  currentAccountTempId: string,\n  depthLimit = MAX_DEPTH_LIMIT,\n  {debugLogger}: {debugLogger: (msg?: string, indent?: number) => void}\n) {\n  if (depthLimit <= 0) {\n    throw new Error(\n      `recurseResolveAccount Error: Depth limit (${MAX_DEPTH_LIMIT}) reached. Ensure your authorization functions resolve to an account after ${MAX_DEPTH_LIMIT} resolves.`\n    )\n  }\n\n  let account = ix.accounts[currentAccountTempId]\n\n  if (!account) return null\n\n  debugLogger(\n    `account: ${account.tempId}`,\n    Math.max(MAX_DEPTH_LIMIT - depthLimit, 0)\n  )\n\n  if (account?.resolve) {\n    if (isFn(account?.resolve)) {\n      debugLogger(\n        `account: ${account.tempId} -- cache MISS`,\n        Math.max(MAX_DEPTH_LIMIT - depthLimit, 0)\n      )\n\n      const {resolve, ...accountWithoutResolve} = account\n\n      let resolvedAccounts = await resolve(\n        accountWithoutResolve,\n        buildPreSignable(accountWithoutResolve, ix)\n      )\n\n      resolvedAccounts = Array.isArray(resolvedAccounts)\n        ? resolvedAccounts\n        : [resolvedAccounts]\n\n      let flatResolvedAccounts = recurseFlatMap(resolvedAccounts)\n\n      flatResolvedAccounts = flatResolvedAccounts.map(\n        (flatResolvedAccount: InteractionAccount) =>\n          addAccountToIx(ix, flatResolvedAccount)\n      )\n\n      account.resolve = flatResolvedAccounts.map(\n        (flatResolvedAccount: InteractionAccount) => flatResolvedAccount.tempId\n      )\n\n      account = addAccountToIx(ix, account)\n\n      const recursedAccounts = await Promise.all(\n        flatResolvedAccounts.map(\n          async (resolvedAccount: InteractionAccount) => {\n            return await recurseResolveAccount(\n              ix,\n              resolvedAccount.tempId,\n              depthLimit - 1,\n              {debugLogger}\n            )\n          }\n        )\n      )\n\n      return recursedAccounts\n        ? recurseFlatMap(recursedAccounts)\n        : account.tempId\n    } else {\n      debugLogger(\n        `account: ${account.tempId} -- cache HIT`,\n        Math.max(MAX_DEPTH_LIMIT - depthLimit, 0)\n      )\n\n      return account.resolve\n    }\n  }\n  return account.tempId\n}\n\nconst getAccountTempIDs = (rawTempIds: string | string[] | null) => {\n  if (rawTempIds === null) {\n    return []\n  }\n  return Array.isArray(rawTempIds) ? rawTempIds : [rawTempIds]\n}\n\nasync function resolveAccountType(\n  ix: Interaction,\n  type: ROLES,\n  {debugLogger}: {debugLogger: (msg?: string, indent?: number) => void}\n) {\n  invariant(\n    ix && typeof ix === \"object\",\n    \"resolveAccountType Error: ix not defined\"\n  )\n  invariant(\n    type === ROLES.PAYER ||\n      type === ROLES.PROPOSER ||\n      type === ROLES.AUTHORIZATIONS,\n    \"resolveAccountType Error: type must be 'payer', 'proposer' or 'authorizations'\"\n  )\n\n  let accountTempIDs = getAccountTempIDs(ix[type])\n\n  let allResolvedAccounts: InteractionAccount[] = []\n  for (let accountId of accountTempIDs) {\n    let account = ix.accounts[accountId]\n    invariant(Boolean(account), `resolveAccountType Error: account not found`)\n\n    let resolvedAccountTempIds = await recurseResolveAccount(\n      ix,\n      accountId,\n      MAX_DEPTH_LIMIT,\n      {\n        debugLogger,\n      }\n    )\n\n    resolvedAccountTempIds = Array.isArray(resolvedAccountTempIds)\n      ? resolvedAccountTempIds\n      : [resolvedAccountTempIds]\n\n    let resolvedAccounts: InteractionAccount[] = resolvedAccountTempIds.map(\n      (resolvedAccountTempId: string) => ix.accounts[resolvedAccountTempId]\n    )\n\n    let flatResolvedAccounts = uniqueAccountsFlatMap(resolvedAccounts)\n\n    allResolvedAccounts = allResolvedAccounts.concat(flatResolvedAccounts)\n  }\n\n  invariant(\n    allResolvedAccounts.length > 0 || type === ROLES.AUTHORIZATIONS,\n    `resolveAccountType Error: no ${type} accounts were found`\n  )\n\n  if (type === ROLES.PAYER) {\n    allResolvedAccounts = allResolvedAccounts.filter(\n      acct => acct.role.payer === true\n    )\n  }\n  if (type === ROLES.PROPOSER) {\n    allResolvedAccounts = allResolvedAccounts.filter(\n      acct => acct.role.proposer === true\n    )\n  }\n  if (type === ROLES.AUTHORIZATIONS) {\n    allResolvedAccounts = allResolvedAccounts.filter(\n      acct => acct.role.authorizer === true\n    )\n  }\n\n  ix[type] = (\n    Array.isArray(ix[type])\n      ? [...new Set(allResolvedAccounts.map(acct => acct.tempId))]\n      : allResolvedAccounts[0].tempId\n  ) as string & string[]\n\n  // Ensure all payers are of the same account\n  if (type === ROLES.PAYER) {\n    let address\n    for (const payerTempID of ix[ROLES.PAYER]) {\n      let pAcct = ix.accounts[payerTempID]\n      if (!address) address = pAcct.addr\n      else if (address !== pAcct.addr) {\n        throw new Error(\n          \"resolveAccountType Error: payers from different accounts detected\"\n        )\n      }\n    }\n  }\n}\n\nexport async function resolveAccounts(\n  ix: Interaction,\n  opts: Record<string, any> = {}\n) {\n  if (isTransaction(ix)) {\n    if (!Array.isArray(ix.payer)) {\n      log.deprecate({\n        pkg: \"FCL\",\n        subject:\n          '\"ix.payer\" must be an array. Support for ix.payer as a singular',\n        message: \"See changelog for more info.\",\n      })\n    }\n    let [debugLogger, getDebugMessage] = debug()\n    try {\n      await resolveAccountType(ix, ROLES.PROPOSER, {debugLogger})\n      await resolveAccountType(ix, ROLES.AUTHORIZATIONS, {debugLogger})\n      await resolveAccountType(ix, ROLES.PAYER, {debugLogger})\n\n      await removeUnusedIxAccounts(ix, {debugLogger})\n\n      if (opts.enableDebug) {\n        console.debug(getDebugMessage())\n      }\n    } catch (error) {\n      console.error(\"=== SAD PANDA ===\\n\\n\", error, \"\\n\\n=== SAD PANDA ===\")\n      throw error\n    }\n  }\n  return ix\n}\n","import {isTransaction} from \"../interaction/interaction\"\nimport {Interaction, InteractionAccount} from \"@onflow/typedefs\"\nimport {sansPrefix} from \"@onflow/util-address\"\nimport {\n  Transaction,\n  TransactionProposalKey,\n  encodeTransactionPayload as encodeInsideMessage,\n  encodeTransactionEnvelope as encodeOutsideMessage,\n} from \"../encode/encode\"\nimport {\n  createSignableVoucher,\n  findInsideSigners,\n  findOutsideSigners,\n} from \"./voucher\"\n\nexport async function resolveSignatures(ix: Interaction) {\n  if (isTransaction(ix)) {\n    try {\n      let insideSigners = findInsideSigners(ix)\n      const insidePayload = encodeInsideMessage(prepForEncoding(ix))\n\n      // Promise.all could potentially break the flow if there are multiple inside signers trying to resolve at the same time\n      // causing multiple triggers of authz function that tries to render multiple auth iiframes/tabs/extensions\n      // as an alternative, use this:\n      // for(const insideSigner of insideSigners) {\n      //   await fetchSignature(ix, insidePayload)(insideSigner);\n      // }\n      await Promise.all(insideSigners.map(fetchSignature(ix, insidePayload)))\n\n      let outsideSigners = findOutsideSigners(ix)\n      const outsidePayload = encodeOutsideMessage({\n        ...prepForEncoding(ix),\n        payloadSigs: insideSigners.map(id => ({\n          address: ix.accounts[id].addr || \"\",\n          keyId: ix.accounts[id].keyId || 0,\n          sig: ix.accounts[id].signature || \"\",\n        })),\n      })\n\n      // Promise.all could potentially break the flow if there are multiple outside signers trying to resolve at the same time\n      // causing multiple triggers of authz function that tries to render multiple auth iframes/tabs/extensions\n      // as an alternative, use this:\n      // for(const outsideSigner of outsideSigners) {\n      //   await fetchSignature(ix, outsidePayload)(outsideSigner);\n      // }\n      await Promise.all(outsideSigners.map(fetchSignature(ix, outsidePayload)))\n    } catch (error) {\n      console.error(\"Signatures\", error, {ix})\n      throw error\n    }\n  }\n  return ix\n}\n\nfunction fetchSignature(ix: Interaction, payload: string) {\n  return async function innerFetchSignature(id: string) {\n    const acct = ix.accounts[id]\n    if (acct.signature != null && acct.signature !== undefined) return\n    const {signature} = await acct.signingFunction(\n      buildSignable(acct, payload, ix)\n    )\n    ix.accounts[id].signature = signature\n  }\n}\n\nexport function buildSignable(\n  acct: InteractionAccount,\n  message: string,\n  ix: Interaction\n) {\n  try {\n    return {\n      f_type: \"Signable\",\n      f_vsn: \"1.0.1\",\n      message,\n      addr: sansPrefix(acct.addr),\n      keyId: acct.keyId,\n      roles: acct.role,\n      cadence: ix.message.cadence,\n      args: ix.message.arguments.map(d => ix.arguments[d].asArgument),\n      data: {},\n      interaction: ix,\n      voucher: createSignableVoucher(ix),\n    }\n  } catch (error) {\n    console.error(\"buildSignable\", error)\n    throw error\n  }\n}\n\nfunction prepForEncoding(ix: Interaction): Transaction {\n  const payerAddress = sansPrefix(\n    (Array.isArray(ix.payer) ? ix.accounts[ix.payer[0]] : ix.accounts[ix.payer])\n      .addr || \"\"\n  )\n\n  const proposalKey: TransactionProposalKey = ix.proposer\n    ? {\n        address: sansPrefix(ix.accounts[ix.proposer].addr) || \"\",\n        keyId: ix.accounts[ix.proposer].keyId || 0,\n        sequenceNum: ix.accounts[ix.proposer].sequenceNum || 0,\n      }\n    : {}\n\n  return {\n    cadence: ix.message.cadence,\n    refBlock: ix.message.refBlock,\n    computeLimit: ix.message.computeLimit,\n    arguments: ix.message.arguments.map(id => ix.arguments[id].asArgument),\n    proposalKey,\n    payer: payerAddress,\n    authorizers: ix.authorizations\n      .map(cid => sansPrefix(ix.accounts[cid].addr) || \"\")\n      .reduce((prev: string[], current) => {\n        return prev.find(item => item === current) ? prev : [...prev, current]\n      }, []),\n  }\n}\n","import {get, pipe, Ok, Bad} from \"../interaction/interaction\"\n\nexport async function resolveValidators(ix) {\n  const validators = get(ix, \"ix.validators\", [])\n  return pipe(\n    ix,\n    validators.map(cb => ix => cb(ix, {Ok, Bad}))\n  )\n}\n","import {sansPrefix} from \"@onflow/util-address\"\n\nexport async function resolveFinalNormalization(ix) {\n  for (let key of Object.keys(ix.accounts)) {\n    ix.accounts[key].addr = sansPrefix(ix.accounts[key].addr)\n  }\n  return ix\n}\n","import {get, isFn} from \"../interaction/interaction\"\nimport {createSignableVoucher} from \"./voucher\"\n\nexport async function resolveVoucherIntercept(ix) {\n  const fn = get(ix, \"ix.voucher-intercept\")\n  if (isFn(fn)) {\n    await fn(createSignableVoucher(ix))\n  }\n  return ix\n}\n","import {isTransaction} from \"../interaction/interaction\"\nimport {config} from \"@onflow/config\"\nimport * as logger from \"@onflow/util-logger\"\n\nconst DEFAULT_COMPUTE_LIMIT = 100\n\nexport async function resolveComputeLimit(ix) {\n  if (isTransaction(ix)) {\n    ix.message.computeLimit =\n      ix.message.computeLimit || (await config.get(\"fcl.limit\"))\n\n    if (!ix.message.computeLimit) {\n      logger.log.deprecate({\n        pkg: \"FCL/SDK\",\n        subject:\n          \"The built-in default compute limit (DEFAULT_COMPUTE_LIMIT=10)\",\n        transition:\n          \"https://github.com/onflow/flow-js-sdk/blob/master/packages/sdk/TRANSITIONS.md#0009-deprecate-default-compute-limit\",\n      })\n      ix.message.computeLimit = DEFAULT_COMPUTE_LIMIT\n    }\n  }\n  return ix\n}\n","import {pipe, isTransaction} from \"../interaction/interaction\"\nimport {config} from \"@onflow/config\"\nimport {invariant} from \"@onflow/util-invariant\"\nimport {Buffer} from \"@onflow/rlp\"\nimport {send as defaultSend} from \"@onflow/transport-http\"\nimport * as ixModule from \"../interaction/interaction\"\nimport {response} from \"../response/response\"\nimport {build} from \"../build/build.js\"\nimport {getBlock} from \"../build/build-get-block.js\"\nimport {getAccount} from \"../build/build-get-account.js\"\nimport {decodeResponse as decode} from \"../decode/decode.js\"\n\nimport {resolveCadence} from \"./resolve-cadence.js\"\nimport {resolveArguments} from \"./resolve-arguments.js\"\nimport {resolveAccounts} from \"./resolve-accounts\"\nimport {resolveSignatures} from \"./resolve-signatures\"\nimport {resolveValidators} from \"./resolve-validators.js\"\nimport {resolveFinalNormalization} from \"./resolve-final-normalization.js\"\nimport {resolveVoucherIntercept} from \"./resolve-voucher-intercept.js\"\nimport {resolveComputeLimit} from \"./resolve-compute-limit.js\"\n\nconst noop = v => v\nconst debug =\n  (key, fn = noop) =>\n  async ix => {\n    const take = (obj, keys = []) => {\n      if (typeof keys === \"string\") keys = keys.split(\" \")\n      keys.reduce((acc, key) => ({...acc, [key]: obj[key]}), {})\n    }\n\n    const accts = ix =>\n      [\n        \"\\nAccounts:\",\n        {\n          proposer: ix.proposer,\n          authorizations: ix.authorizations,\n          payer: ix.payer,\n        },\n        \"\\n\\nDetails:\",\n        ix.accounts,\n      ].filter(Boolean)\n\n    const log = (...msg) => {\n      console.log(`debug[${key}] ---\\n`, ...msg, \"\\n\\n\\n---\")\n    }\n\n    if (await config.get(`debug.${key}`)) await fn(ix, log, accts)\n    return ix\n  }\n\nexport const resolve = pipe([\n  resolveCadence,\n  debug(\"cadence\", (ix, log) => log(ix.message.cadence)),\n  resolveComputeLimit,\n  debug(\"compute limit\", (ix, log) => log(ix.message.computeLimit)),\n  resolveArguments,\n  debug(\"arguments\", (ix, log) => log(ix.message.arguments, ix.message)),\n  resolveAccounts,\n  debug(\"accounts\", (ix, log, accts) => log(...accts(ix))),\n  /* special */ execFetchRef,\n  /* special */ execFetchSequenceNumber,\n  resolveSignatures,\n  debug(\"signatures\", (ix, log, accts) => log(...accts(ix))),\n  resolveFinalNormalization,\n  resolveValidators,\n  resolveVoucherIntercept,\n  debug(\"resolved\", (ix, log) => log(ix)),\n])\n\nasync function execFetchRef(ix) {\n  if (isTransaction(ix) && ix.message.refBlock == null) {\n    const node = await config().get(\"accessNode.api\")\n    const sendFn = await config.first(\n      [\"sdk.transport\", \"sdk.send\"],\n      defaultSend\n    )\n\n    invariant(\n      sendFn,\n      `Required value for sdk.transport is not defined in config. See: ${\"https://github.com/onflow/fcl-js/blob/master/packages/sdk/CHANGELOG.md#0057-alpha1----2022-01-21\"}`\n    )\n\n    ix.message.refBlock = (\n      await sendFn(\n        build([getBlock()]),\n        {config, response, Buffer, ix: ixModule},\n        {node}\n      ).then(decode)\n    ).id\n  }\n  return ix\n}\n\nasync function execFetchSequenceNumber(ix) {\n  if (isTransaction(ix)) {\n    var acct = Object.values(ix.accounts).find(a => a.role.proposer)\n    invariant(acct, `Transactions require a proposer`)\n    if (acct.sequenceNum == null) {\n      const node = await config().get(\"accessNode.api\")\n      const sendFn = await config.first(\n        [\"sdk.transport\", \"sdk.send\"],\n        defaultSend\n      )\n\n      invariant(\n        sendFn,\n        `Required value for sdk.transport is not defined in config. See: ${\"https://github.com/onflow/fcl-js/blob/master/packages/sdk/CHANGELOG.md#0057-alpha1----2022-01-21\"}`\n      )\n\n      ix.accounts[acct.tempId].sequenceNum = await sendFn(\n        await build([getAccount(acct.addr)]),\n        {config, response, Buffer, ix: ixModule},\n        {node}\n      )\n        .then(decode)\n        .then(acct => acct.keys)\n        .then(keys => keys.find(key => key.index === acct.keyId))\n        .then(key => key.sequenceNumber)\n    }\n  }\n  return ix\n}\n","import {Ok, Bad} from \"../interaction/interaction\"\n\nexport function invariant(...args) {\n  if (args.length > 1) {\n    const [predicate, message] = args\n    return invariant((ix, {Ok, Bad}) => {\n      return predicate ? Ok(ix) : Bad(ix, message)\n    })\n  }\n  const [fn] = args\n  return ix => fn(ix, {Ok, Bad})\n}\n","import {Buffer} from \"@onflow/rlp\"\nimport {send as defaultSend} from \"@onflow/transport-http\"\nimport {initInteraction, pipe} from \"../interaction/interaction\"\nimport * as ixModule from \"../interaction/interaction\"\nimport {invariant} from \"../build/build-invariant.js\"\nimport {response} from \"../response/response\"\nimport {config} from \"@onflow/config\"\nimport {resolve as defaultResolve} from \"../resolve/resolve.js\"\n\n/**\n * @description - Sends arbitrary scripts, transactions, and requests to Flow\n * @param {Array.<Function>} args - An array of functions that take interaction and return interaction\n * @param {object} opts - Optional parameters\n * @returns {Promise<*>} - A promise that resolves to a response\n */\nexport const send = async (args = [], opts = {}) => {\n  const sendFn = await config.first(\n    [\"sdk.transport\", \"sdk.send\"],\n    opts.send || defaultSend\n  )\n\n  invariant(\n    sendFn,\n    `Required value for sdk.transport is not defined in config. See: ${\"https://github.com/onflow/fcl-js/blob/master/packages/sdk/CHANGELOG.md#0057-alpha1----2022-01-21\"}`\n  )\n\n  const resolveFn = await config.first(\n    [\"sdk.resolve\"],\n    opts.resolve || defaultResolve\n  )\n\n  opts.node = opts.node || (await config().get(\"accessNode.api\"))\n\n  if (Array.isArray(args)) args = pipe(initInteraction(), args)\n  return sendFn(\n    await resolveFn(args),\n    {config, response, ix: ixModule, Buffer},\n    opts\n  )\n}\n","import {config} from \"@onflow/config\"\nimport {decodeResponse} from \"./decode\"\n\nexport async function decode(response) {\n  const decodersFromConfig = await config().where(/^decoder\\./)\n  const decoders = Object.entries(decodersFromConfig).map(\n    ([pattern, xform]) => {\n      pattern = `/${pattern.replace(/^decoder\\./, \"\")}$/`\n      return [pattern, xform]\n    }\n  )\n\n  return decodeResponse(response, Object.fromEntries(decoders))\n}\n","import {withPrefix, sansPrefix} from \"@onflow/util-address\"\nimport {\n  encodeTransactionPayload,\n  encodeTransactionEnvelope,\n} from \"../encode/encode\"\n\nconst findPayloadSigners = voucher => {\n  // Payload Signers Are: (authorizers + proposer) - payer\n  let payload = new Set(voucher.authorizers)\n  payload.add(voucher.proposalKey.address)\n  payload.delete(voucher.payer)\n  return Array.from(payload).map(withPrefix)\n}\n\nconst findEnvelopeSigners = voucher => {\n  // Envelope Signers Are: (payer)\n  let envelope = new Set([voucher.payer])\n  return Array.from(envelope).map(withPrefix)\n}\n\nexport class UnableToDetermineMessageEncodingTypeForSignerAddress extends Error {\n  constructor(signerAddress) {\n    const msg = `\n        Encode Message From Signable Error: Unable to determine message encoding for signer addresss: ${signerAddress}. \n        Please ensure the address: ${signerAddress} is intended to sign the given transaction as specified by the transaction signable.\n      `.trim()\n    super(msg)\n    this.name = \"Unable To Determine Message Encoding For Signer Addresss\"\n  }\n}\n\nexport const encodeMessageFromSignable = (signable, signerAddress) => {\n  let payloadSigners = findPayloadSigners(signable.voucher)\n  let envelopeSigners = findEnvelopeSigners(signable.voucher)\n\n  const isPayloadSigner = payloadSigners.includes(withPrefix(signerAddress))\n  const isEnvelopeSigner = envelopeSigners.includes(withPrefix(signerAddress))\n\n  if (!isPayloadSigner && !isEnvelopeSigner) {\n    throw new UnableToDetermineMessageEncodingTypeForSignerAddress(\n      signerAddress\n    )\n  }\n\n  const message = {\n    cadence: signable.voucher.cadence,\n    refBlock: signable.voucher.refBlock,\n    computeLimit: signable.voucher.computeLimit,\n    arguments: signable.voucher.arguments,\n    proposalKey: {\n      ...signable.voucher.proposalKey,\n      address: sansPrefix(signable.voucher.proposalKey.address),\n    },\n    payer: sansPrefix(signable.voucher.payer),\n    authorizers: signable.voucher.authorizers.map(sansPrefix),\n    payloadSigs: signable.voucher.payloadSigs.map(ps => ({\n      ...ps,\n      address: sansPrefix(ps.address),\n    })),\n  }\n\n  return isPayloadSigner\n    ? encodeTransactionPayload(message)\n    : encodeTransactionEnvelope(message)\n}\n","import {update} from \"../interaction/interaction\"\n\nexport function validator(cb) {\n  return update(\"ix.validators\", validators =>\n    Array.isArray(validators) ? validators.push(cb) : [cb]\n  )\n}\n","import {pipe} from \"../interaction/interaction\"\nimport {validator} from \"./build-validator.js\"\n\n/**\n * @description - A builder function that returns a partial interaction to a block at a specific height\n * @param {number} height - The height of the block to get\n * @returns {Function} - A partial interaction object\n */\nexport function atBlockHeight(height) {\n  return pipe([\n    ix => {\n      ix.block.height = height\n      return ix\n    },\n    validator(ix => {\n      if (typeof ix.block.isSealed === \"boolean\")\n        throw new Error(\"Unable to specify both block height and isSealed.\")\n      if (ix.block.id)\n        throw new Error(\"Unable to specify both block height and block id.\")\n      return ix\n    }),\n  ])\n}\n","import {isGetAccount, pipe, Ok} from \"../interaction/interaction\"\nimport {validator} from \"./build-validator.js\"\n\nexport function atBlockId(id) {\n  return pipe([\n    ix => {\n      ix.block.id = id\n      return Ok(ix)\n    },\n    validator((ix, {Ok, Bad}) => {\n      if (isGetAccount(ix))\n        return Bad(\n          ix,\n          \"Unable to specify a block id with a Get Account interaction.\"\n        )\n      if (typeof ix.block.isSealed === \"boolean\")\n        return Bad(ix, \"Unable to specify both block id and isSealed.\")\n      if (ix.block.height)\n        return Bad(ix, \"Unable to specify both block id and block height.\")\n      return Ok(ix)\n    }),\n  ])\n}\n","import {atBlockHeight} from \"../build/build-at-block-height.js\"\nimport {atBlockId} from \"../build/build-at-block-id.js\"\nimport {getAccount} from \"../build/build-get-account.js\"\nimport {invariant} from \"@onflow/util-invariant\"\nimport {decodeResponse as decode} from \"../decode/decode.js\"\nimport {send} from \"../send/send.js\"\n\n/**\n * @typedef {import(\"@onflow/typedefs\").Account} Account\n */\n\n/**\n * @description  Returns the details of an account from their public address\n * @param {string} address - Address of the account\n * @param {object} [queryOptions] - Query parameters\n * @param {number} [queryOptions.height] - Block height to query\n * @param {string} [queryOptions.id] - Block ID to query\n * @param {object} [opts] - Optional parameters\n * @returns {Promise<Account>} - A promise that resolves to an account response\n */\nexport function account(address, {height, id} = {}, opts) {\n  invariant(\n    !(id && height),\n    `Method: account -- Cannot pass \"id\" and \"height\" simultaneously`\n  )\n\n  // Get account by ID\n  if (id) return send([getAccount(address), atBlockId(id)], opts).then(decode)\n\n  // Get account by height\n  if (height)\n    return send([getAccount(address), atBlockHeight(height)], opts).then(decode)\n\n  return send([getAccount(address)], opts).then(decode)\n}\n","import {send} from \"../send/send.js\"\nimport {getBlock} from \"../build/build-get-block\"\nimport {atBlockHeight} from \"../build/build-at-block-height.js\"\nimport {atBlockId} from \"../build/build-at-block-id.js\"\nimport {decodeResponse as decode} from \"../decode/decode.js\"\nimport {invariant} from \"@onflow/util-invariant\"\n\n/**\n * @typedef {import(\"@onflow/typedefs\").Block} Block\n */\n\n/**\n * @description Returns the latest block (optionally sealed or not), by id, or by height\n * @param {object} [queryOptions] - Query parameters\n * @param {boolean} [queryOptions.sealed] - Whether to query for a sealed block\n * @param {number} [queryOptions.height] - Block height to query\n * @param {string} [queryOptions.id] - Block ID to query\n * @param {object} [opts] - Optional parameters\n * @returns {Promise<Block>} - A promise that resolves to a block response\n */\nexport function block({sealed = false, id, height} = {}, opts = {}) {\n  invariant(\n    !((sealed && id) || (sealed && height)),\n    `Method: block -- Cannot pass \"sealed\" with \"id\" or \"height\"`\n  )\n\n  invariant(\n    !(id && height),\n    `Method: block -- Cannot pass \"id\" and \"height\" simultaneously`\n  )\n\n  // Get block by ID\n  if (id) return send([getBlock(), atBlockId(id)], opts).then(decode)\n\n  // Get block by height\n  if (height)\n    return send([getBlock(), atBlockHeight(height)], opts).then(decode)\n\n  // Get latest block\n  return send([getBlock(sealed)], opts).then(decode)\n}\n","import {Ok, makeGetNodeVerionInfo, pipe} from \"../interaction/interaction\"\n\n/**\n * A builder function for the Get Node Version Info interaction\n */\nexport function getNodeVersionInfo(): Function {\n  return pipe([\n    makeGetNodeVerionInfo,\n    ix => {\n      return Ok(ix)\n    },\n  ])\n}\n","import {send} from \"../send/send.js\"\nimport {decodeResponse as decode} from \"../decode/decode.js\"\nimport {getNodeVersionInfo} from \"../build/build-get-node-version-info\"\nimport {NodeVersionInfo} from \"@onflow/typedefs\"\n\n/**\n * @description Returns the version information from to connected node\n * @returns A promise that resolves to a block response\n */\nexport async function nodeVersionInfo(\n  opts: any = {}\n): Promise<NodeVersionInfo> {\n  return send([getNodeVersionInfo()], opts).then(decode)\n}\n","import {TransactionRole} from \"@onflow/typedefs\"\nimport {pipe, prepAccount} from \"../interaction/interaction\"\n\nexport function authorizations(ax = []) {\n  return pipe(\n    ax.map(authz => {\n      return prepAccount(authz, {role: TransactionRole.AUTHORIZER})\n    })\n  )\n}\n\nexport function authorization(addr, signingFunction, keyId, sequenceNum) {\n  return {addr, signingFunction, keyId, sequenceNum}\n}\n","import {pipe, Ok, makeGetEvents} from \"../interaction/interaction\"\nimport * as logger from \"@onflow/util-logger\"\n\nexport function getEvents(eventType, start, end) {\n  if (typeof start !== \"undefined\" || typeof end !== \"undefined\") {\n    logger.log.deprecate({\n      pkg: \"FCL/SDK\",\n      subject: \"Passing a start and end into getEvents\",\n      transition:\n        \"https://github.com/onflow/flow-js-sdk/blob/master/packages/sdk/TRANSITIONS.md#0005-deprecate-start-end-get-events-builder\",\n    })\n  }\n\n  return pipe([\n    makeGetEvents,\n    ix => {\n      ix.events.eventType = eventType\n      ix.events.start = start\n      ix.events.end = end\n      return Ok(ix)\n    },\n  ])\n}\n","import {pipe, Ok, makeGetEvents} from \"../interaction/interaction\"\n\n/**\n * @description - A builder function that returns all instances of a particular event (by name) within a height range\n * NOTE:\n * - The block range provided must be from the current spork.\n * - The block range provided must be 250 blocks or lower per request.\n * @param {string} eventName - The name of the event to get\n * @param {number} fromBlockHeight - The height of the block to start looking for events (inclusive)\n * @param {number} toBlockHeight - The height of the block to stop looking for events (inclusive)\n * @returns {Function} - An interaction object\n */\nexport function getEventsAtBlockHeightRange(\n  eventName,\n  fromBlockHeight,\n  toBlockHeight\n) {\n  return pipe([\n    makeGetEvents,\n    ix => {\n      ix.events.eventType = eventName\n      ix.events.start = fromBlockHeight\n      ix.events.end = toBlockHeight\n      return Ok(ix)\n    },\n  ])\n}\n","import {pipe, Ok, makeGetEvents} from \"../interaction/interaction\"\n\n/**\n * @description - A builder function that returns all instances of a particular event (by name) within a set of blocks, specified by block ids\n * NOTE:\n * - The block range provided must be from the current spork.\n * @param {string} eventName - The name of the event to get\n * @param {number[]} blockIds - The ids of the blocks to look for events\n * @returns {Function} - An interaction object\n */\nexport function getEventsAtBlockIds(eventName, blockIds = []) {\n  return pipe([\n    makeGetEvents,\n    ix => {\n      ix.events.eventType = eventName\n      ix.events.blockIds = blockIds\n      return Ok(ix)\n    },\n  ])\n}\n","import {pipe, Ok, makeGetBlockHeader} from \"../interaction/interaction\"\n\n/**\n * @description - A builder function that returns the interaction to get a block header\n * @param {boolean} [isSealed] - Whether or not the block should be sealed\n * @returns {Function} - An interaction object\n */\nexport function getBlockHeader(isSealed = null) {\n  return pipe([\n    makeGetBlockHeader,\n    ix => {\n      ix.block.isSealed = isSealed\n      return Ok(ix)\n    },\n  ])\n}\n","import {pipe, makeGetCollection} from \"../interaction/interaction\"\n\n/**\n * @description - A builder function that returns all a collection containing a list of transaction ids by its collection id\n * NOTE:\n * - The block range provided must be from the current spork. All events emitted during past sporks is current unavailable.\n * @param {string} [id] - The id of the collection to get\n * @returns {Function} - An interaction object\n */\nexport function getCollection(id = null) {\n  return pipe([\n    makeGetCollection,\n    ix => {\n      ix.collection.id = id\n      return ix\n    },\n  ])\n}\n","import {pipe, Ok, makeGetTransactionStatus} from \"../interaction/interaction\"\n\n/**\n * @description - A builder function that returns the status of transaction\n * NOTE: The transactionID provided must be from the current spork.\n * @param {string} transactionId - The id of the transaction to get status\n * @returns {Function} - An interaction object\n */\nexport function getTransactionStatus(transactionId) {\n  return pipe([\n    makeGetTransactionStatus,\n    ix => {\n      ix.transaction.id = transactionId\n      return Ok(ix)\n    },\n  ])\n}\n","import {pipe, Ok, makeGetTransaction} from \"../interaction/interaction\"\n\n/**\n * @description - A builder function that returns a transaction\n * NOTE: The transactionID provided must be from the current spork.\n * @param {string} transactionId - The id of the transaction to get\n * @returns {Function} - An interaction object\n */\nexport function getTransaction(transactionId) {\n  return pipe([\n    makeGetTransaction,\n    ix => {\n      ix.transaction.id = transactionId\n      return Ok(ix)\n    },\n  ])\n}\n","import {pipe, Ok, makeGetNetworkParameters} from \"../interaction/interaction\"\n\nexport function getNetworkParameters() {\n  return pipe([\n    makeGetNetworkParameters,\n    ix => {\n      return Ok(ix)\n    },\n  ])\n}\n","export function limit(computeLimit) {\n  return ix => {\n    ix.message.computeLimit = computeLimit\n    return ix\n  }\n}\n","import {pipe, makeArgument, CadenceArgument} from \"../interaction/interaction\"\nimport {TypeDescriptorInput, TypeDescriptor} from \"@onflow/types\"\n\n/**\n * @description A utility builder to be used with other builders to pass in arguments with a value and supported type\n * @param ax An array of arguments\n * @returns An interaction object\n */\nexport function args(ax: CadenceArgument<any>[]) {\n  return pipe(ax.map(makeArgument))\n}\n\n/**\n * @description A utility builder to be used with fcl.args[...] to create FCL supported arguments for interactions\n * @param value The value of the argument\n * @param xform A function to transform the value\n * @returns An argument object\n */\nexport function arg<T extends TypeDescriptor<any, any>>(\n  value: TypeDescriptorInput<T>,\n  xform: T\n) {\n  return {value, xform} as CadenceArgument<T>\n}\n","import {TransactionRole} from \"@onflow/typedefs\"\nimport {prepAccount} from \"../interaction/interaction\"\n\nexport function proposer(authz) {\n  return prepAccount(authz, {role: TransactionRole.PROPOSER})\n}\n","import {TransactionRole} from \"@onflow/typedefs\"\nimport {pipe, prepAccount} from \"../interaction/interaction\"\n\n/**\n * @description - A builder function that adds payer account(s) to a transaction\n * @param {Function | Array.<Function>} ax - An account address or array of account addresses\n * @returns {Function} - An interaction object\n */\nexport function payer(ax = []) {\n  if (!Array.isArray(ax)) ax = [ax]\n  return pipe(\n    ax.map(authz => {\n      return prepAccount(authz, {role: TransactionRole.PAYER})\n    })\n  )\n}\n","import {makePing} from \"../interaction/interaction\"\n\nexport function ping() {\n  return makePing\n}\n","import {pipe, Ok} from \"../interaction/interaction\"\n\nexport function ref(refBlock) {\n  return pipe([\n    ix => {\n      ix.message.refBlock = refBlock\n      return Ok(ix)\n    },\n  ])\n}\n","import {pipe, Ok, put, makeScript} from \"../interaction/interaction\"\nimport {template} from \"@onflow/util-template\"\n\nexport function script(...args) {\n  return pipe([makeScript, put(\"ix.cadence\", template(...args))])\n}\n","import {pipe, put, Ok, makeTransaction} from \"../interaction/interaction\"\nimport {template} from \"@onflow/util-template\"\n\nconst DEFAULT_SCRIPT_ACCOUNTS = []\nconst DEFUALT_REF = null\n\n/**\n * @description - A template builder to use a Cadence transaction for an interaction\n * @param {...*} args - The arguments to pass\n * @returns {Function} - An interaction object\n */\nexport function transaction(...args) {\n  return pipe([\n    makeTransaction,\n    put(\"ix.cadence\", template(...args)),\n    ix => {\n      ix.message.refBlock = ix.message.refBlock || DEFUALT_REF\n      ix.authorizations = ix.authorizations || DEFAULT_SCRIPT_ACCOUNTS\n      return Ok(ix)\n    },\n  ])\n}\n","import {put} from \"../interaction/interaction\"\n\nexport function voucherIntercept(fn) {\n  return put(\"ix.voucher-intercept\", fn)\n}\n","import {invariant} from \"@onflow/util-invariant\"\nimport {pipe, Ok, makeSubscribeEvents} from \"../interaction/interaction\"\nimport {EventFilter, Interaction} from \"@onflow/typedefs\"\n\n/**\n * Subscribe to events with the given filter & parameters\n */\nexport function subscribeEvents({\n  startBlockId,\n  startHeight,\n  eventTypes,\n  addresses,\n  contracts,\n  heartbeatInterval,\n}: EventFilter & {\n  startBlockId?: string\n  startHeight?: number\n  heartbeatInterval?: number\n}): Function {\n  invariant(\n    !(startBlockId && startHeight),\n    `SDK Subscribe Events Error: Cannot set both startBlockId and startHeight.`\n  )\n\n  return pipe([\n    makeSubscribeEvents,\n    (ix: Interaction) => {\n      ix.subscribeEvents.startBlockId = startBlockId ?? null\n      ix.subscribeEvents.startHeight = startHeight ?? null\n      ix.subscribeEvents.eventTypes = eventTypes ?? null\n      ix.subscribeEvents.addresses = addresses ?? null\n      ix.subscribeEvents.contracts = contracts ?? null\n      ix.subscribeEvents.heartbeatInterval = heartbeatInterval ?? null\n      return Ok(ix)\n    },\n  ]) as any\n}\n","import {isTransaction, Ok} from \"../interaction/interaction\"\nimport * as ixModule from \"../interaction/interaction\"\nimport {response as responseModule} from \"../response/response\"\nimport {config} from \"@onflow/config\"\nimport {decodeResponse} from \"../decode/decode.js\"\nimport {getAccount} from \"../build/build-get-account.js\"\nimport {build} from \"../build/build.js\"\nimport {invariant} from \"@onflow/util-invariant\"\nimport {Buffer} from \"@onflow/rlp\"\nimport {send as defaultSend} from \"@onflow/transport-http\"\n\nexport const resolveProposerSequenceNumber =\n  ({node}) =>\n  async ix => {\n    if (!isTransaction(ix)) return Ok(ix)\n    if (ix.accounts[ix.proposer].sequenceNum) return Ok(ix)\n\n    const sendFn = await config.first(\n      [\"sdk.transport\", \"sdk.send\"],\n      defaultSend\n    )\n\n    invariant(\n      sendFn,\n      `Required value for sdk.transport is not defined in config. See: ${\"https://github.com/onflow/fcl-js/blob/master/packages/sdk/CHANGELOG.md#0057-alpha1----2022-01-21\"}`\n    )\n\n    const response = await sendFn(\n      await build([getAccount(ix.accounts[ix.proposer].addr)]),\n      {config, response: responseModule, Buffer, ix: ixModule},\n      {node}\n    )\n    const decoded = await decodeResponse(response)\n\n    ix.accounts[ix.proposer].sequenceNum =\n      decoded.keys[ix.accounts[ix.proposer].keyId].sequenceNumber\n\n    return Ok(ix)\n  }\n","import {\n  isTransaction,\n  Ok,\n  initInteraction,\n  pipe,\n} from \"../interaction/interaction\"\nimport * as ixModule from \"../interaction/interaction\"\nimport {response} from \"../response/response\"\nimport {config} from \"@onflow/config\"\nimport {decodeResponse} from \"../decode/decode.js\"\nimport {getBlock} from \"../build/build-get-block.js\"\nimport {invariant} from \"@onflow/util-invariant\"\nimport {Buffer} from \"@onflow/rlp\"\nimport {send as defaultSend} from \"@onflow/transport-http\"\n\nasync function getRefId(opts) {\n  const node = await config().get(\"accessNode.api\")\n  const sendFn = await config.first([\"sdk.transport\", \"sdk.send\"], defaultSend)\n\n  invariant(\n    sendFn,\n    `Required value for sdk.transport is not defined in config. See: ${\"https://github.com/onflow/fcl-js/blob/master/packages/sdk/CHANGELOG.md#0057-alpha1----2022-01-21\"}`\n  )\n\n  var ix\n  ix = await pipe(initInteraction(), [getBlock()])\n  ix = await sendFn(ix, {config, response, Buffer, ix: ixModule}, {node})\n  ix = await decodeResponse(ix)\n  return ix.id\n}\n\nexport function resolveRefBlockId(opts) {\n  return async ix => {\n    if (!isTransaction(ix)) return Ok(ix)\n    if (ix.message.refBlock) return Ok(ix)\n\n    ix.message.refBlock = await getRefId(opts)\n\n    return Ok(ix)\n  }\n}\n","import {invariant} from \"@onflow/util-invariant\"\nimport {isGetAccount, isGetBlock} from \"../interaction/interaction\"\n\nexport function mockAccountResponse(ix, numberOfKeys = 5) {\n  // prettier-ignore\n  invariant(ix.account, \"mockAccountResponse(ix) -- ix.account is missing\", ix)\n  // prettier-ignore\n  invariant( ix.account.addr, \"mockAccountResponse(ix) -- ix.account.addr is missing\", ix)\n\n  const address = ix.account.addr\n\n  return {\n    account: {\n      addr: address,\n      keys: Array.from({length: numberOfKeys}, (_, i) => ({\n        index: i,\n        sequenceNumber: 42,\n      })),\n    },\n  }\n}\n\nexport function mockGetBlockResponse(ix) {\n  return {\n    tag: \"GET_BLOCK\",\n    block: {\n      id: \"32\",\n    },\n  }\n}\n\nconst identity = v => v\n\nexport function mockSend(fallback = identity) {\n  return async function execSend(ix) {\n    ix = await ix\n    switch (true) {\n      case isGetAccount(ix):\n        return mockAccountResponse(ix)\n\n      case isGetBlock(ix):\n        return mockGetBlockResponse(ix)\n\n      default:\n        return fallback(ix)\n    }\n  }\n}\n","import {InteractionAccount} from \"@onflow/typedefs\"\nimport {withPrefix} from \"@onflow/util-address\"\n\nexport const idof = (acct: InteractionAccount) =>\n  `${withPrefix(acct.addr)}-${acct.keyId}`\n\nexport function sig(opts: Partial<InteractionAccount>) {\n  return [\"SIGNATURE\", opts.addr, opts.keyId].join(\".\")\n}\n\ninterface IAuthzOpts {\n  signingFunction?: (signable: any) => any\n}\n\nexport function authzFn(opts: IAuthzOpts = {}) {\n  return function (account: Partial<InteractionAccount>) {\n    const acct: Partial<InteractionAccount> = {\n      ...account,\n      ...opts,\n      resolve: null,\n      signingFunction:\n        opts.signingFunction ||\n        account.signingFunction ||\n        fallbackSigningFunction,\n    }\n\n    return acct\n\n    function fallbackSigningFunction(_signable: any) {\n      return {\n        addr: acct.addr,\n        keyId: acct.keyId,\n        signature: sig(acct),\n      }\n    }\n  }\n}\n\ninterface IAuthzResolveOpts {\n  tempId?: string\n}\n\nexport function authzResolve(opts: IAuthzResolveOpts = {}) {\n  return function (account: InteractionAccount) {\n    const {tempId, ...rest} = opts\n    return {\n      ...account,\n      tempId: tempId || \"WITH_RESOLVE\",\n      resolve: authzFn(rest),\n    }\n  }\n}\n\nconst ROLE = {proposer: false, authorizer: false, payer: false}\nconst noop = () => {}\n\ninterface IAuthzResolveMany {\n  tempId?: string\n  authorizations: any[]\n  proposer?: any\n  payer?: any\n}\n\nexport function authzResolveMany(\n  opts: IAuthzResolveMany = {authorizations: []}\n) {\n  return function (account: InteractionAccount): InteractionAccount {\n    const tempId = opts.tempId || \"AUTHZ_RESOLVE_MANY\"\n    return {\n      ...account,\n      tempId,\n      resolve: () =>\n        [\n          opts.proposer &&\n            authzFn(opts.proposer)({role: {...ROLE, proposer: true}}),\n          ...opts.authorizations\n            .map(authzFn)\n            .map(d => d({role: {...ROLE, authorizer: true}})),\n          opts.payer && authzFn(opts.payer)({role: {...ROLE, payer: true}}),\n        ].filter(Boolean),\n    }\n  }\n}\n\nexport function authzDeepResolveMany(\n  opts: IAuthzResolveMany = {authorizations: []},\n  depth = 1\n) {\n  return function (account: InteractionAccount): InteractionAccount {\n    const tempId = opts.tempId || \"AUTHZ_DEEP_RESOLVE_MANY\"\n    return {\n      ...account,\n      tempId,\n      resolve:\n        depth > 0\n          ? authzDeepResolveMany(opts, depth - 1)(account).resolve\n          : authzResolveMany(opts)(account).resolve,\n    }\n  }\n}\n","import {build} from \"../build/build\"\nimport {resolve} from \"../resolve/resolve\"\nimport {ref} from \"../build/build-ref\"\n\nexport const run = (fns = []) => build([ref(\"123\"), ...fns]).then(resolve)\n","export const VERSION = PACKAGE_CURRENT_VERSION || \"TESTVERSION\"\n","import * as logger from \"@onflow/util-logger\"\n// Base\nexport {build} from \"./build/build.js\"\nexport {resolve} from \"./resolve/resolve.js\"\nexport {send} from \"./send/send.js\"\nexport {decode} from \"./decode/sdk-decode.js\"\nexport {\n  encodeTransactionPayload,\n  encodeTransactionEnvelope,\n  encodeTxIdFromVoucher,\n} from \"./encode/encode\"\n\n// Utils\nexport {\n  interaction, // deprecated\n  initInteraction,\n  isOk,\n  isBad,\n  why,\n  pipe,\n  get,\n  put,\n  update,\n  destroy,\n  isUnknown,\n  isScript,\n  isTransaction,\n  isGetTransaction,\n  isGetTransactionStatus,\n  isGetAccount,\n  isGetEvents,\n  isPing,\n  isGetBlock,\n  isGetBlockHeader,\n  isGetCollection,\n  isGetNetworkParameters,\n  isGetNodeVersionInfo,\n} from \"./interaction/interaction\"\nimport type {CadenceArgument} from \"./interaction/interaction\"\nexport {CadenceArgument} // Workaround for babel https://github.com/babel/babel/issues/8361\n\nexport {createSignableVoucher, voucherToTxId} from \"./resolve/voucher\"\nexport {encodeMessageFromSignable} from \"./wallet-utils/encode-signable.js\"\nexport {template as cadence} from \"@onflow/util-template\"\nexport {template as cdc} from \"@onflow/util-template\"\n\n// Helpers\nexport {account} from \"./account/account.js\"\nexport {block} from \"./block/block.js\"\nexport {nodeVersionInfo} from \"./node-version-info/node-version-info\"\n\n// Builders\nexport {authorizations, authorization} from \"./build/build-authorizations.js\"\nexport {atBlockHeight} from \"./build/build-at-block-height.js\"\nexport {atBlockId} from \"./build/build-at-block-id.js\"\nexport {getAccount} from \"./build/build-get-account.js\"\nexport {getEvents} from \"./build/build-get-events.js\"\nexport {getEventsAtBlockHeightRange} from \"./build/build-get-events-at-block-height-range.js\"\nexport {getEventsAtBlockIds} from \"./build/build-get-events-at-block-ids\"\nexport {getBlock} from \"./build/build-get-block.js\"\nexport {getBlockHeader} from \"./build/build-get-block-header.js\"\nexport {getCollection} from \"./build/build-get-collection\"\nexport {getTransactionStatus} from \"./build/build-get-transaction-status.js\"\nexport {getTransaction} from \"./build/build-get-transaction.js\"\nexport {getNetworkParameters} from \"./build/build-get-network-parameters.js\"\nexport {getNodeVersionInfo} from \"./build/build-get-node-version-info\"\nexport {limit} from \"./build/build-limit.js\"\nexport {args, arg} from \"./build/build-arguments\"\nexport {proposer} from \"./build/build-proposer.js\"\nexport {payer} from \"./build/build-payer.js\"\nexport {ping} from \"./build/build-ping.js\"\nexport {ref} from \"./build/build-ref.js\"\nexport {script} from \"./build/build-script.js\"\nexport {transaction} from \"./build/build-transaction.js\"\nexport {validator} from \"./build/build-validator.js\"\nexport {invariant} from \"./build/build-invariant.js\"\nexport {voucherIntercept} from \"./build/build-voucher-intercept.js\"\nexport {subscribeEvents} from \"./build/build-subscribe-events\"\n\n// Resolvers\nexport {resolveCadence} from \"./resolve/resolve-cadence.js\"\nexport {resolveFinalNormalization} from \"./resolve/resolve-final-normalization\"\nexport {resolveProposerSequenceNumber} from \"./resolve/resolve-proposer-sequence-number\"\nexport {resolveArguments} from \"./resolve/resolve-arguments.js\"\nexport {resolveAccounts} from \"./resolve/resolve-accounts\"\nexport {response} from \"./response/response\"\nexport {resolveSignatures} from \"./resolve/resolve-signatures\"\nexport {resolveValidators} from \"./resolve/resolve-validators.js\"\nexport {resolveRefBlockId} from \"./resolve/resolve-ref-block-id.js\"\nexport {resolveVoucherIntercept} from \"./resolve/resolve-voucher-intercept.js\"\n\nexport {config} from \"@onflow/config\"\n\n// Deprecated\nexport const params = (params: never) =>\n  logger.log.deprecate({\n    pkg: \"FCL/SDK\",\n    message: `The params builder has been removed from the Flow JS-SDK/FCL.`,\n    transition:\n      \"https://github.com/onflow/flow-js-sdk/blob/master/packages/sdk/TRANSITIONS.md#0001-deprecate-params\",\n    level: logger.LEVELS.error,\n  })\nexport const param = (params: never) =>\n  logger.log.deprecate({\n    pkg: \"FCL/SDK\",\n    message: `The param builder has been removed from the Flow JS-SDK/FCL.`,\n    transition:\n      \"https://github.com/onflow/flow-js-sdk/blob/master/packages/sdk/TRANSITIONS.md#0001-deprecate-params\",\n    level: logger.LEVELS.error,\n  })\n\nimport * as TestUtils from \"./test-utils\"\nexport {TestUtils}\n\nexport {VERSION} from \"./VERSION\"\n"],"names":["ACCT","InteractionResolverKind","ACCOUNT","ARG","ARGUMENT","IX","InteractionTag","UNKNOWN","InteractionStatus","OK","KEYS","Set","Object","keys","JSON","parse","initInteraction","interaction","log","deprecate","pkg","message","transition","level","LEVELS","warn","isNumber","d","isArray","Array","isObj","isNull","isFn","isInteraction","ix","key","hasOwnProperty","Ok","status","Bad","reason","BAD","makeIx","wat","tag","prepAccountKeyId","acct","keyId","invariant","isNaN","parseInt","toString","initAccount","prepAccount","opts","arguments","length","undefined","role","tempId","uuidv4","account","authorization","resolve","_len","rest","_key","reduce","fn","accounts","TransactionRole","AUTHORIZER","authorizations","push","PAYER","payer","makeArgument","arg","value","asArgument","xform","resolveArgument","bind","makeUnknown","makeScript","SCRIPT","makeTransaction","TRANSACTION","makeGetTransactionStatus","GET_TRANSACTION_STATUS","makeGetTransaction","GET_TRANSACTION","makeGetAccount","GET_ACCOUNT","makeGetEvents","GET_EVENTS","makePing","PING","makeGetBlock","GET_BLOCK","makeGetBlockHeader","GET_BLOCK_HEADER","makeGetCollection","GET_COLLECTION","makeGetNetworkParameters","GET_NETWORK_PARAMETERS","makeSubscribeEvents","SUBSCRIBE_EVENTS","makeGetNodeVerionInfo","GET_NODE_VERSION_INFO","is","isUnknown","isScript","isTransaction","isGetTransactionStatus","isGetTransaction","isGetAccount","isGetEvents","isPing","isGetBlock","isGetBlockHeader","isGetCollection","isGetNetworkParameters","isGetNodeVersionInfo","isSubscribeEvents","isOk","isBad","why","isAccount","kind","isArgument","argument","hardMode","has","Error","recPipe","fns","hd","cur","e","pipe","_len2","args","_key2","arg1","arg2","identity","v","get","fallback","assigns","put","update","destroy","build","DEFAULT_RESPONSE","transaction","transactionStatus","transactionId","encodedData","events","block","blockHeader","latestBlock","collection","networkParameters","streamConnection","heartbeat","nodeVersionInfo","response","getBlock","isSealed","getAccount","addr","sansPrefix","decodeStream","stream","decodeResponse","customDecoders","newStream","EventEmitter","queue","taskQueue","on","data","topics","filter","newDataPromise","Promise","all","map","channel","partialResponse","newData","forEach","_ref","emit","relayEvent","event","callback","off","close","running","run","task","shift","latestBlockDeprecationNotice","subject","decodeImplicit","i","decodeVoid","decodeType","type","staticType","decodeOptional","optional","decoders","stack","recurseDecode","decodeArray","array","res","decodeDictionary","dictionary","acc","decodeComposite","composite","decoded","fields","name","decoder","id","decoderLookup","decodeInclusiveRange","range","includes","defaultDecoders","UInt","Int","UInt8","Int8","UInt16","Int16","UInt32","Int32","UInt64","Int64","UInt128","Int128","UInt256","Int256","Word8","Word16","Word32","Word64","Word128","Word256","UFix64","Fix64","String","Character","Bool","Address","Void","Optional","Reference","Dictionary","Event","Resource","Struct","Enum","Type","Path","Capability","InclusiveRange","lookup","found","find","test","reg","RegExp","substring","decodeInstructions","join","decode","filteredDecoders","customDecoder","decoderKey","decodeEvents","transactionIndex","eventIndex","payload","blockId","blockHeight","blockTimestamp","prefixRegex","rawChainId","chainId","formattedChainId","replace","isString","oldIdentifierPatternFn","isOldIdentifierSyntax","cadence","newIdentifierPatternFn","isNewIdentifierSyntax","getContractIdentifierSyntaxMatches","matchAll","resolveCadence","config","where","then","entries","regex","fullMatch","contractName","address","withPrefix","logger","title","cast","handleArgResolution","depth","resolvedArg","resolveArguments","encodeTransactionPayload","tx","prependTransactionDomainTag","rlpEncode","preparePayload","encodeTransactionEnvelope","prepareEnvelope","encodeTxIdFromVoucher","voucher","sha3_256","prepareVoucher","rightPaddedHexBuffer","pad","Buffer","from","padEnd","leftPaddedHexBuffer","padStart","TRANSACTION_DOMAIN_TAG","addressBuffer","blockBuffer","argumentToString","stringify","scriptBuffer","script","signatureBuffer","signature","encode","msg","sha","SHA3","digest","validatePayload","refBlock","computeLimit","proposalKey","sequenceNum","authorizers","authorizer","validateEnvelope","preparePayloadSignatures","signers","collectSigners","payloadSigs","sig","signerIndex","sort","a","b","Map","addSigner","set","validateVoucher","prepareSigs","sigs","envelopeSigs","payloadFields","field","checkField","proposalKeyFields","payloadSigsFields","index","payloadSigFields","envelopeSigsFields","envelopeSigFields","isObject","check","defaultVal","obj","base","missingFieldError","invalidFieldError","printFieldName","findInsideSigners","inside","proposer","add","p","delete","findOutsideSigners","outside","createSignableVoucher","buildAuthorizers","cid","prev","current","item","buildInsideSigners","buildOutsideSigners","voucherToTxId","MAX_DEPTH_LIMIT","idof","prototype","call","Function","genAccountId","ids","ROLES","debug","SPACE","SPACE_COUNT_PER_INDENT","DEBUG_MESSAGE","indent","fill","curr","recurseFlatMap","el","depthLimit","flatMap","buildPreSignable","f_type","f_vsn","roles","error","console","removeUnusedIxAccounts","payerTempIds","authorizersTempIds","proposerTempIds","ixAccountKeys","uniqueTempIds","concat","ixAccountKey","addAccountToIx","newAccount","existingAccount","uniqueAccountsFlatMap","flatMapped","seen","uniqueAccountsFlatMapped","accountId","param","recurseResolveAccount","currentAccountTempId","debugLogger","Math","max","accountWithoutResolve","resolvedAccounts","flatResolvedAccounts","flatResolvedAccount","recursedAccounts","resolvedAccount","getAccountTempIDs","rawTempIds","resolveAccountType","PROPOSER","AUTHORIZATIONS","accountTempIDs","allResolvedAccounts","Boolean","resolvedAccountTempIds","resolvedAccountTempId","payerTempID","pAcct","resolveAccounts","getDebugMessage","enableDebug","resolveSignatures","insideSigners","insidePayload","encodeInsideMessage","prepForEncoding","fetchSignature","outsideSigners","outsidePayload","encodeOutsideMessage","innerFetchSignature","signingFunction","buildSignable","payerAddress","resolveValidators","validators","cb","resolveFinalNormalization","resolveVoucherIntercept","DEFAULT_COMPUTE_LIMIT","resolveComputeLimit","noop","accts","execFetchRef","execFetchSequenceNumber","node","sendFn","first","defaultSend","ixModule","values","sequenceNumber","predicate","send","resolveFn","defaultResolve","decodersFromConfig","pattern","fromEntries","findPayloadSigners","findEnvelopeSigners","envelope","UnableToDetermineMessageEncodingTypeForSignerAddress","constructor","signerAddress","trim","encodeMessageFromSignable","signable","payloadSigners","envelopeSigners","isPayloadSigner","isEnvelopeSigner","ps","validator","atBlockHeight","height","atBlockId","sealed","getNodeVersionInfo","ax","authz","getEvents","eventType","start","end","getEventsAtBlockHeightRange","eventName","fromBlockHeight","toBlockHeight","getEventsAtBlockIds","blockIds","getBlockHeader","getCollection","getTransactionStatus","getTransaction","getNetworkParameters","limit","ping","ref","template","DEFAULT_SCRIPT_ACCOUNTS","DEFUALT_REF","voucherIntercept","subscribeEvents","startBlockId","startHeight","eventTypes","addresses","contracts","heartbeatInterval","resolveProposerSequenceNumber","responseModule","getRefId","resolveRefBlockId","mockAccountResponse","numberOfKeys","_","mockGetBlockResponse","mockSend","execSend","authzFn","fallbackSigningFunction","_signable","authzResolve","ROLE","authzResolveMany","authzDeepResolveMany","VERSION","params"],"mappings":"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"}