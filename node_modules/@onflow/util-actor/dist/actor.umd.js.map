{"version":3,"file":"actor.umd.js","sources":["../src/mailbox/index.ts","../src/index.ts"],"sourcesContent":["export interface IMailbox<T> {\n  deliver(msg: T): Promise<void>\n  receive(): Promise<T>\n}\nexport const mailbox = <T>(): IMailbox<T> => {\n  const queue: T[] = []\n  let next: ((msg: T) => void) | undefined\n\n  return {\n    async deliver(msg: T) {\n      queue.push(msg)\n      if (next) {\n        next(queue.shift() as T)\n        next = undefined\n      }\n    },\n\n    receive(): Promise<T> {\n      return new Promise<T>(function innerReceive(resolve) {\n        const msg = queue.shift()\n        if (msg) return resolve(msg)\n        next = resolve\n      })\n    },\n  }\n}\n","import {mailbox as createMailbox, type IMailbox} from \"./mailbox\"\n\nlet promise: any\nconst _queueMicrotask = (cb: any) =>\n  (promise || (promise = Promise.resolve())).then(cb).catch((err: any) =>\n    setTimeout(() => {\n      throw err\n    }, 0)\n  )\n\nexport const INIT = \"INIT\"\nexport const SUBSCRIBE = \"SUBSCRIBE\"\nexport const UNSUBSCRIBE = \"UNSUBSCRIBE\"\nexport const UPDATED = \"UPDATED\"\nexport const SNAPSHOT = \"SNAPSHOT\"\nexport const EXIT = \"EXIT\"\nexport const TERMINATE = \"TERMINATE\"\nconst DUMP = \"DUMP\"\nconst INC = \"INC\"\nconst KEYS = \"KEYS\"\n\ninterface IRegistryRecord {\n  addr: string\n  mailbox: IMailbox<Letter>\n  subs: Set<string>\n  kvs: Record<string, any>\n  error: any\n}\ninterface IRoot {\n  FCL_REGISTRY: Record<string, IRegistryRecord> | null\n}\n\nexport type ActorContext = ReturnType<typeof createCtx>\n\nexport type Letter = {\n  to: string\n  from?: string\n  tag: string\n  data: any\n  timeout: number\n  reply: (data: any) => void\n  reject: (error: any) => void\n}\nexport type HandlerFn = (\n  ctx: ActorContext,\n  letter: Letter,\n  data: any\n) => Promise<void> | void\nexport type SpawnFn = (address?: string) => void\nexport interface ActorHandlers {\n  [INIT]?: (ctx: ActorContext) => Promise<void> | void\n  [SUBSCRIBE]?: HandlerFn\n  [UNSUBSCRIBE]?: HandlerFn\n  [UPDATED]?: HandlerFn\n  [SNAPSHOT]?: HandlerFn\n  [EXIT]?: HandlerFn\n  [TERMINATE]?: HandlerFn\n  [DUMP]?: HandlerFn\n  [INC]?: HandlerFn\n  [KEYS]?: HandlerFn\n  [key: string]: HandlerFn | undefined\n}\n\nconst root: IRoot = (typeof self === \"object\" &&\n  self.self === self &&\n  (self as unknown as IRoot)) ||\n  (typeof global === \"object\" &&\n    global.global === global &&\n    (global as unknown as IRoot)) ||\n  (typeof window === \"object\" &&\n    window.window === window &&\n    (window as unknown as IRoot)) || {FCL_REGISTRY: null}\n\nroot.FCL_REGISTRY = root.FCL_REGISTRY == null ? {} : root.FCL_REGISTRY\n\nconst FCL_REGISTRY = root.FCL_REGISTRY\nlet pid = 0b0\n\nconst DEFAULT_TIMEOUT = 5000\n\nexport function send<T>(\n  addr: string,\n  tag: string,\n  data?: Record<string, any> | null,\n  opts?: {expectReply?: true; timeout?: number; from?: string}\n): Promise<T>\nexport function send(\n  addr: string,\n  tag: string,\n  data?: Record<string, any> | null,\n  opts?: {expectReply?: false; timeout?: number; from?: string}\n): Promise<boolean>\nexport function send<T>(\n  addr: string,\n  tag: string,\n  data?: Record<string, any> | null,\n  opts: {expectReply?: boolean; timeout?: number; from?: string} = {\n    expectReply: false,\n  }\n): Promise<T | boolean> {\n  return new Promise<T | boolean>((resolve, reject) => {\n    const expectReply = opts.expectReply || false\n    const timeout = opts.timeout != null ? opts.timeout : DEFAULT_TIMEOUT\n\n    if (expectReply && timeout) {\n      setTimeout(\n        () =>\n          reject(new Error(`Timeout: ${timeout}ms passed without a response.`)),\n        timeout\n      )\n    }\n\n    const payload = {\n      to: addr,\n      from: opts.from,\n      tag,\n      data,\n      timeout,\n      reply: resolve,\n      reject,\n    }\n\n    try {\n      if (FCL_REGISTRY[addr]) {\n        FCL_REGISTRY[addr].mailbox.deliver(payload)\n      }\n      if (!expectReply) {\n        resolve(true)\n      }\n    } catch (error) {\n      console.error(\n        \"FCL.Actor -- Could Not Deliver Message\",\n        payload,\n        FCL_REGISTRY[addr],\n        error\n      )\n      reject(error)\n    }\n  })\n}\n\nexport const kill = (addr: string) => {\n  delete FCL_REGISTRY[addr]\n}\n\nconst fromHandlers =\n  <Handlers extends ActorHandlers>(handlers: Handlers) =>\n  async (ctx: ActorContext) => {\n    if (typeof handlers[INIT] === \"function\") await handlers[INIT](ctx)\n    __loop: while (1) {\n      const letter = await ctx.receive()\n      try {\n        if (letter.tag === EXIT) {\n          if (typeof handlers[TERMINATE] === \"function\") {\n            await handlers[TERMINATE](ctx, letter, letter.data || {})\n          }\n          break __loop\n        }\n        await handlers[letter.tag as any]?.(ctx, letter, letter.data || {})\n      } catch (error) {\n        console.error(`${ctx.self()} Error`, letter, error)\n      } finally {\n        continue __loop\n      }\n    }\n  }\n\nconst parseAddr = (addr: string | number | null): string => {\n  if (addr == null) {\n    while (FCL_REGISTRY[String(pid)]) {\n      pid++\n    }\n    return String(pid)\n  }\n  return String(addr)\n}\n\nexport const spawn = <Handlers extends ActorHandlers>(\n  fnOrHandlers: ((ctx: ActorContext) => Promise<void>) | Handlers,\n  rawAddr: string | number | null = null\n) => {\n  const addr = parseAddr(rawAddr)\n  if (FCL_REGISTRY[addr] != null) return addr\n\n  FCL_REGISTRY[addr] = {\n    addr,\n    mailbox: createMailbox(),\n    subs: new Set(),\n    kvs: {},\n    error: null,\n  }\n\n  const ctx = createCtx(addr)\n\n  let fn: (ctx: ActorContext) => Promise<void>\n  if (typeof fnOrHandlers === \"object\")\n    fn = fromHandlers<Handlers>(fnOrHandlers)\n  else fn = fnOrHandlers\n\n  _queueMicrotask(async () => {\n    await fn(ctx)\n    kill(addr)\n  })\n\n  return addr\n}\n\nconst createCtx = (addr: string) => ({\n  self: () => addr,\n  receive: () => FCL_REGISTRY[addr].mailbox.receive(),\n  send: (\n    to: string | null | undefined,\n    tag: string,\n    data?: any,\n    opts: Record<string, any> = {}\n  ) => {\n    if (to == null) return\n    opts.from = addr\n    return send(to, tag, data, opts)\n  },\n  sendSelf: (tag: string, data?: any, opts: Record<string, any> = {}) => {\n    if (FCL_REGISTRY[addr]) send(addr, tag, data, opts)\n  },\n  broadcast: (tag: string, data: any, opts: Record<string, any> = {}) => {\n    opts.from = addr\n    for (const to of FCL_REGISTRY[addr].subs) send(to, tag, data, opts)\n  },\n  subscribe: (sub?: string | null) =>\n    sub != null && FCL_REGISTRY[addr].subs.add(sub),\n  unsubscribe: (sub?: string | null) =>\n    sub != null && FCL_REGISTRY[addr].subs.delete(sub),\n  subscriberCount: () => FCL_REGISTRY[addr].subs.size,\n  hasSubs: () => !!FCL_REGISTRY[addr].subs.size,\n  put: <T>(key: string, value: T) => {\n    if (key != null) FCL_REGISTRY[addr].kvs[key] = value\n  },\n  get: <T>(key: string, fallback: T | undefined = undefined) => {\n    const value = FCL_REGISTRY[addr].kvs[key]\n    return value == null ? fallback : value\n  },\n  delete: (key: string) => {\n    delete FCL_REGISTRY[addr].kvs[key]\n  },\n  update: <T, U>(key: string, fn: (x: T) => U) => {\n    if (key != null)\n      FCL_REGISTRY[addr].kvs[key] = fn(FCL_REGISTRY[addr].kvs[key])\n  },\n  keys: () => {\n    return Object.keys(FCL_REGISTRY[addr].kvs)\n  },\n  all: () => {\n    return FCL_REGISTRY[addr].kvs\n  },\n  where: (pattern: RegExp) => {\n    return Object.keys(FCL_REGISTRY[addr].kvs).reduce((acc, key) => {\n      return pattern.test(key)\n        ? {...acc, [key]: FCL_REGISTRY[addr].kvs[key]}\n        : acc\n    }, {})\n  },\n  merge: (data: Record<string, any> = {}) => {\n    Object.keys(data).forEach(key => (FCL_REGISTRY[addr].kvs[key] = data[key]))\n  },\n  fatalError: (error: Error) => {\n    FCL_REGISTRY[addr].error = error\n    for (const to of FCL_REGISTRY[addr].subs) send(to, UPDATED)\n  },\n})\n\n// Returns an unsubscribe function\n// A SUBSCRIBE handler will need to be created to handle the subscription event\n//\n//  [SUBSCRIBE]: (ctx, letter) => {\n//    ctx.subscribe(letter.from)\n//    ctx.send(letter.from, UPDATED, ctx.all())\n//  }\n//\nexport function subscriber<T>(\n  address: string,\n  spawnFn: SpawnFn,\n  callback: (data: T | null, error: Error | null) => void\n) {\n  spawnFn(address)\n  const self = spawn(async (ctx: ActorContext) => {\n    ctx.send(address, SUBSCRIBE)\n    while (1) {\n      const letter = await ctx.receive()\n      const error = FCL_REGISTRY[address].error\n      if (letter.tag === EXIT) {\n        ctx.send(address, UNSUBSCRIBE)\n        return\n      }\n      if (error) {\n        callback(null, error)\n        ctx.send(address, UNSUBSCRIBE)\n        return\n      }\n\n      callback(letter.data, null)\n    }\n  })\n  return () => send(self, EXIT)\n}\n\n// Returns a promise that returns a result\n// A SNAPSHOT handler will need to be created to handle the snapshot event\n//\n//  [SNAPSHOT]: (ctx, letter) => {\n//    letter.reply(ctx.all())\n//  }\n//\nexport function snapshoter<T>(address: string, spawnFn: SpawnFn) {\n  spawnFn(address)\n  return send<T>(address, SNAPSHOT, null, {\n    expectReply: true,\n    timeout: 0,\n  })\n}\n"],"names":["mailbox","queue","next","deliver","msg","push","shift","undefined","receive","Promise","innerReceive","resolve","promise","_queueMicrotask","cb","then","catch","err","setTimeout","INIT","SUBSCRIBE","UNSUBSCRIBE","UPDATED","SNAPSHOT","EXIT","TERMINATE","root","self","global","window","FCL_REGISTRY","pid","DEFAULT_TIMEOUT","send","addr","tag","data","opts","arguments","length","expectReply","reject","timeout","Error","payload","to","from","reply","error","console","kill","fromHandlers","handlers","ctx","__loop","letter","parseAddr","String","spawn","fnOrHandlers","rawAddr","createMailbox","subs","Set","kvs","createCtx","fn","sendSelf","broadcast","subscribe","sub","add","unsubscribe","delete","subscriberCount","size","hasSubs","put","key","value","get","fallback","update","keys","Object","all","where","pattern","reduce","acc","test","merge","forEach","fatalError","subscriber","address","spawnFn","callback","snapshoter"],"mappings":"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"}