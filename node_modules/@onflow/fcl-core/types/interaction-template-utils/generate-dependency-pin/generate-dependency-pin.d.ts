/**
 * @description Produces a dependency pin for a contract at current state of chain
 * @param {object} params
 * @param {string} params.version - The version of the interaction template
 * @param {string} params.address - The address of the account containing the contract
 * @param {string} params.contractName - The name of the contract
 * @param {object} opts - Options to pass to the interaction
 * @returns {Promise<string>} - The dependency pin
 */
export function generateDependencyPin({ version, address, contractName }: {
    version: string;
    address: string;
    contractName: string;
}, opts?: object): Promise<string>;
/**
 * @description Produces a dependency pin for a contract at latest sealed block
 * @param {object} params
 * @param {string} params.version - The version of the interaction template
 * @param {string} params.address - The address of the account containing the contract
 * @param {string} params.contractName - The name of the contract
 * @param {object} opts - Options to pass to the interaction
 * @returns {Promise<string>} - The dependency pin
 */
export function generateDependencyPinAtLatestSealedBlock({ version, address, contractName }: {
    version: string;
    address: string;
    contractName: string;
}, opts?: object): Promise<string>;
