{"version":3,"file":"util-logger.umd.js","sources":["../src/util-logger.ts"],"sourcesContent":["interface IConfig {\n  get: <T>(key: string) => T;\n}\n\ntype Config = IConfig & (() => IConfig) | null\n\n// Config dependency injected into logger to break circular dependency\nlet config: Config = null\nexport const setConfig = (_config: any) => {\n  config = _config\n}\n\n/**\n * The levels of the logger\n */\nexport enum LEVELS {\n  debug = 5,\n  info = 4,\n  log = 3,\n  warn = 2,\n  error = 1,\n}\n\n/**\n * Builds a message formatted for the logger\n * @param options - The options for the log\n * @param options.title - The title of the log\n * @param options.message - The message of the log\n * @returns The message formatted for the logger\n * @example\n * buildLoggerMessageArgs({ title: \"My Title\", message: \"My Message\" })\n */\nconst buildLoggerMessageArgs = (options: {\n  title: string\n  message: string\n}): string[] => {\n  const {title, message} = options\n  return [\n    `\n    %c${title}\n    ============================\n\n    ${message}\n\n    ============================\n    `\n      .replace(/\\n[^\\S\\r\\n]+/g, \"\\n\")\n      .trim(),\n    \"font-weight:bold;font-family:monospace;\",\n  ]\n}\n\n/**\n * Logs messages based on the level of the message and the level set in the config\n * @param options - The options for the log\n * @param options.title - The title of the log\n * @param options.message - The message of the log\n * @param options.level - The level of the log\n * @param options.always - Whether to always show the log\n * @example\n * log({ title: \"My Title\", message: \"My Message\", level: LEVELS.warn, always: false })\n */\nexport const log = async (options: {\n  title: string\n  message: string\n  level: number\n  always?: boolean\n}) => {\n  const {title, message, level, always} = options\n  const configLoggerLevel = (await config?.()?.get<number>(\"logger.level\")) ?? LEVELS.warn\n\n  // If config level is below message level then don't show it\n  if (!always && configLoggerLevel < level) return\n\n  const loggerMessageArgs = buildLoggerMessageArgs({title, message})\n\n  switch (level) {\n    case LEVELS.debug:\n      console.debug(...loggerMessageArgs)\n      break\n    case LEVELS.info:\n      console.info(...loggerMessageArgs)\n      break\n    case LEVELS.warn:\n      console.warn(...loggerMessageArgs)\n      break\n    case LEVELS.error:\n      console.error(...loggerMessageArgs)\n      break\n    default:\n      console.log(...loggerMessageArgs)\n  }\n}\n\n/**\n * Logs a deprecation notice.  If a callback is provided this function returns a function that will call the callback and log the deprecation notice, otherwise it just logs the deprecation notice.\n * @param options - The options for the log\n * @param options.pkg - The package that is being deprecated\n * @param options.subject - The subject of the deprecation\n * @param options.transition - The transition path for the deprecation\n * @param options.level - The level of the log\n * @param options.message - The message of the log\n * @param options.callback - A callback to run after the log\n * @returns A function that will call the callback and log the deprecation notice if the callback is provided\n * @example\n * // Logs a deprecation notice\n * log.deprecate({ pkg: \"@onflow/fcl\", subject: \"Some item\", transition: \"https://github.com/onflow/flow-js-sdk\", message: \"Descriptive message\", level: LEVELS.warn, callback: () => {} })\n * @example\n * function someFunction() { ... }\n * const deprecatedFunction = log.deprecate({ pkg: \"@onflow/fcl\", subject: \"Some item\", transition: \"https://github.com/foo/bar/TRANSITIONS.md\", message: \"Descriptive message\", level: LEVELS.warn, callback: someFunction })\n * deprecatedFunction() // Calls someFunction and logs the deprecation notice\n */\nlog.deprecate = <T, U>(options: {\n  pkg?: string\n  subject?: string\n  transition?: string\n  level?: number\n  message?: string\n  callback?: (...args: T[]) => U\n}): ((...args: T[]) => Promise<U>) | Promise<void> => {\n  const {\n    pkg,\n    subject,\n    transition,\n    level = LEVELS.warn,\n    message = \"\",\n    callback = null,\n  } = options\n\n  const capitalizeFirstLetter = (str: string) => {\n    return str.charAt(0).toUpperCase() + str.slice(1)\n  }\n\n  const logMessage = () =>\n    log({\n      title: `${pkg ? pkg + \" \" : \"\"}Deprecation Notice`,\n      message: `\n      ${\n        subject\n          ? `${capitalizeFirstLetter(\n              subject\n            )} is deprecated and will cease to work in future releases${\n              pkg ? \" of \" + pkg : \"\"\n            }.`\n          : \"\"\n      }${message ? \"\\n\" + message : \"\"}${\n        transition\n          ? `\\nYou can learn more (including a guide on common transition paths) here: ${transition}`\n          : \"\"\n      }\n    `.trim(),\n      level,\n    })\n\n  if (typeof callback === \"function\") {\n    return async (...args: T[]) => {\n      await logMessage()\n      return await callback(...args)\n    }\n  }\n  return logMessage()\n}\n"],"names":["config","setConfig","_config","LEVELS","buildLoggerMessageArgs","options","title","message","replace","trim","log","level","always","configLoggerLevel","get","warn","loggerMessageArgs","debug","console","info","error","deprecate","pkg","subject","transition","callback","capitalizeFirstLetter","str","charAt","toUpperCase","slice","logMessage","arguments"],"mappings":"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"}